{"version":3,"sources":["reducers/calendar.js","reducers/modal.js","reducers/user.js","reducers/weather.js","reducers/routine.js","reducers/challenge.js","reducers/keyboard.js","reducers/index.js","sagas/calendar.js","sagas/user.js","sagas/weather.js","sagas/routine.js","sagas/challenge.js","config/config.js","sagas/index.js","store/configureStore.js","pages/Main/styles.jsx","components/Clock/index.jsx","components/Weather/WeatherComponent/styles.jsx","components/Weather/WeatherComponent/index.jsx","components/Weather/WeatherWidget/styles.jsx","components/Weather/WeatherWidget/index.jsx","components/Weather/weatherToKorean.js","components/Routine/CustomCard/index.jsx","components/Routine/RoutineList/styles.jsx","components/Routine/RoutineItem/styles.jsx","components/Routine/RoutineItem/index.jsx","components/Routine/RoutineList/index.jsx","components/Routine/RoutinizedHabitList/styles.jsx","components/Routine/RoutinizedHabitItem/styles.jsx","components/Routine/RoutinizedHabitItem/index.jsx","components/Routine/RoutinizedHabitList/index.jsx","components/Routine/ProgressItem/styles.jsx","components/Routine/ProgressItem/index.jsx","components/Routine/RoutineRootComponent/styles.jsx","components/Routine/RoutineRootComponent/index.jsx","components/Challenge/ChallengeList/styles.jsx","components/Challenge/ChallengeItem/styles.jsx","components/Challenge/ChallengeItem/index.jsx","components/Etc/DarkTextField/index.jsx","components/Challenge/CertModal/styles.jsx","components/Challenge/CertModal/index.jsx","components/Challenge/ChallengeList/index.jsx","components/Etc/SettingButtons/styles.jsx","components/Etc/DarkMenu/index.jsx","components/Etc/SettingButtons/index.jsx","components/Calendar/styles.jsx","components/Calendar/index.jsx","components/TodayEvent/index.jsx","pages/Main/index.jsx","pages/Auth/styles.jsx","components/Auth/LoginForm/styles.jsx","components/Auth/LoginForm/index.jsx","pages/Auth/index.jsx","App.js","serviceWorker.js","index.js"],"names":["initialState","events","event","loadEventLoading","loadEventDone","loadEventError","reducer","state","action","produce","draft","type","concat","data","error","routineModal","createRoutineModal","modifyHabitModal","alertModal","confirmModal","alertModalMessage","createEventModal","modifyEventModal","addressModal","addressInfo","alertModalFunction","message","updateMyInfoLoading","updateMyInfoDone","updateMyInfoError","loadMyInfoLoading","loadMyInfoDone","loadMyInfoError","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","me","isSignUp","age","gender","nickname","phone_number","post_code","main_address","sub_address","loadWeatherLoading","loadWeatherDone","loadWeatherError","weatherDong","nowWeather","expectedWeathers","dong","daily","weather","hourly","date","Date","dt","minTemp","temp","min","maxTemp","max","nowTemp","i","push","myRoutines","myHabits","loadTodayRoutinesLoading","loadTodayRoutinesDone","loadTodayRoutinesError","checkRoutinizedHabitLoading","checkRoutinizedHabitDone","checkRoutinizedHabitError","checkRoutineLoading","checkRoutineDone","checkRoutineError","choosedRoutine","choosedRoutinizedHabit","length","RoutinizedHabits","sort","a","b","order","RoutineActiveDays","day_of_week","DailyAchieveRoutines","routineIdx","routinizedHabitIdx","DailyAchieveHabits","idx","challenges","singleChallenge","newChallenges","recChallenges","myChallenges","myChallenge","myCreateChallenges","searchChallenges","challengeImagePath","uploadChallengeImageLoading","uploadChallengeImageDone","uploadChallengeImageError","addChallengeLoading","addChallengeDone","addChallengeError","loadChallengesLoading","loadChallengesDone","loadChallengesError","loadNewChallengesLoading","loadNewChallengesDone","loadNewChallengesError","loadRecChallengesLoading","loadRecChallengesDone","loadRecChallengesError","loadMyChallengesLoading","loadMyChallengesDone","loadMyChallengesError","loadMyCreateChallengesLoading","loadMyCreateChallengesDone","loadMyCreateChallengesError","participateChallengeLoading","participateChallengeDone","participateChallengeError","certifyChallengeLoading","certifyChallengeDone","certifyChallengeError","likeChallengeLoading","likeChallengeDone","likeChallengeError","unlikeChallengeLoading","unlikeChallengeDone","unlikeChallengeError","searchChallengeLoading","searchChallengeDone","searchChallengeError","deleteChallengeParticipationLoading","deleteChallengeParticipationDone","deleteChallengeParticipationError","loadChallengeDone","uploadChallengeImagaDone","find","v","id","ChallengeParticipationId","certification_count","challenge","ChallengeId","Likers","UserId","oneChallenge","newChallenge","recChallenge","map","Challenge","myCreateChallenge","filter","tempChallenge","openKeyboard","keyInfo","rootReducer","combineReducers","calendar","modal","user","routine","keyboard","combinedReducer","loadEvent","watchLoadEvent","challengeSaga","loadEventAPI","console","log","axios","get","call","result","put","response","takeLatest","all","fork","loadMyInfo","logIn","logOut","signUp","watchLoadMyInfo","watchLogIn","watchLogOut","watchSignUp","userSaga","loadMyInfoAPI","logInAPI","post","logOutAPI","signUpAPI","loadWeather","watchLoadWeather","weatherSaga","loadWeatherAPI","loadTodayRoutines","checkRoutinizedHabit","checkDailyAchieveRoutine","watchLoadTodayRoutines","watchCheckRoutinizedHabit","watchCheckRoutine","routineSaga","loadTodayRoutinesAPI","checkRoutinizedHabitAPI","routineId","habitId","select","habits","f","checkDailyAchieveRoutineAPI","uploadChallengeImage","addChallenge","loadChallenges","loadChallenge","loadNewChallenges","loadRecChallenges","loadMyChallenges","loadMyCreateChallenges","participateChallenge","certifyChallenge","likeChallenge","unlikeChallenge","searchChallenge","deleteChallengeParticipation","watchUploadChallengeImage","watchAddChallenge","watchLoadChallenges","watchLoadChallenge","watchLoadNewChallenges","watchLoadRecChallenges","watchLoadMyChallenges","watchLoadMyCreateChallenges","watchParticipateChallenge","watchCertifyChallenge","watchLikeChallenge","watchUnlikeChallenge","watchSearchChallenge","watchDeleteChallengeParticipation","uploadChallengeImageAPI","addChallengeAPI","loadChallengesAPI","loadChallengeAPI","loadNewChallengesAPI","loadRecChallengesAPI","loadMyChallengesAPI","loadMyCreateChallengesAPI","participateChallengeAPI","certifyChallengeAPI","challengeId","likeChallengeAPI","patch","unlikeChallengeAPI","delete","searchChallengeAPI","deleteChallengeParticipationAPI","withStyles","theme","root","color","palette","getContrastText","teal","backgroundColor","rootSaga","calendarSaga","defaults","baseURL","withCredentials","sagaMiddleware","createSagaMiddleware","enhancer","compose","applyMiddleware","store","createStore","sagaTask","run","Wrapper","styled","div","App","day","style","textAlign","className","format","ticking","now","moment","month","props","item","Grid","container","md","Typography","marginTop","getMonth","getDate","variant","letterSpacing","getDay","src","icon","alt","dispatch","useDispatch","useSelector","useEffect","CardActions","fontSize","Math","ceil","width","floor","weatherToKorean","key","border","Card","CustomCard","ListItem","onClick","xs","lg","name","time","timeArr","split","am","hour","getTime","tz","start_time","display","CardContent","List","RoutineItem","routinizedHabit","stopInterval","clearTime","xl","Habit","lineHeight","Checkbox","checked","disabled","goBack","RoutinizedHabitItem","enqueueSnackbar","useSnackbar","useState","tabValue","setTabValue","zoomIn","changeZoomIn","changeZoomOut","habit","dailyAchieveHabits","timeInterval","sec","requiredTime","time_required","requiredMin","requiredSec","isChecked","undefined","hidden","content","assist_link","title","frameborder","allow","allowfullscreen","mozallowfullscreen","msallowfullscreen","oallowfullscreen","webkitallowfullscreen","Tabs","value","onChange","newValue","Tab","IconButton","runInterval","RoutineId","HabitId","setZoomIn","setTime","setTimeInterval","start","setTimeout","clearTimeout","spacing","RoutineList","RoutinizedHabitList","ProgressItem","gutterBottom","maxWidth","textOverflow","whiteSpace","overflow","start_date","end_date","total_number_of_certification","toFixed","padding","LinearProgress","certification_cycle","changeChoosedChellenge","DarkTextField","borderRadius","borderBottomColor","borderColor","TextField","inputText","buttonArray","CertModal","forwardRef","ref","closeCertModal","imageInput","useRef","activeDays","ChallengeCertificationDays","certification_available","activeTime","startTime","ChallengeCertificationTimes","certification_available_start_time","substring","endTime","certification_available_end_time","layout","setLayout","language","setLanguage","keyboardopen","setKeyboardOpen","setContent","reset","onClickImageUpload","useCallback","current","click","onUploadImage","e","imageFormData","FormData","append","target","files","nowDate","y","getFullYear","m","d","img_addr","certification_datetime","canCert","getHours","minute","getMinutes","startHour","parseInt","startMinute","endHour","endMinute","active_day_of_week","includes","checkCertAvailable","position","float","maxHeight","accept","label","multiline","rows","placeholder","fullWidth","keyboardRef","r","layoutName","onKeyPress","button","pop","Hangul","assemble","Button","msg","choosedChellenge","setChoosedChellenge","num","settings","arrows","dots","infinite","speed","slidesToShow","slidesToScroll","DarkMenu","paper","Menu","routineVisible","routineHandleChange","challengeVisible","challengeHandleChange","history","useHistory","React","anchorEl","setAnchorEl","open","Boolean","onSignOut","currentTarget","keepMounted","onClose","PaperProps","MenuItem","Switch","window","location","replace","Calendar","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","headerToolbar","left","center","right","initialView","locale","dayCellContent","info","buttonText","today","selectMirror","height","dayMaxEvents","TodayEvent","eventStartDay","eventStartTime","bool","allDay","setChecked","marginLeft","inputProps","marginRight","Main","setRoutineVisible","setChallengeVisible","todayEvent","isSame","end","isBetween","maxSnack","TransitionComponent","Fade","in","ChallengeList","RoutineRootComponent","Clock","SettingButtons","prev","component","aria-label","myEvent","regExpEm","regExpPw","LoginForm","email","setEmail","onChangeEmail","password","setPassword","onChangePassword","setDisabled","onLogin","test","alert","Container","margin","direction","justifyContent","alignItems","required","defaultValue","background","autoComplete","Divider","align","Auth","fontFamily","createTheme","typography","join","body1","fontWeight","overrides","MuiCssBaseline","body","exact","path","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ba07f9f0.chunk.js","sourcesContent":["import produce from 'immer'\n\nconst initialState = {\n    events: [], // 전체 일정\n    event: null, //선택한 일정 정보   \n    loadEventLoading: false,\n    loadEventDone: false,\n    loadEventError: null,\n}\n\nexport const LOAD_EVENT_REQUEST = 'LOAD_EVENT_REQUEST'\nexport const LOAD_EVENT_SUCCESS = 'LOAD_EVENT_SUCCESS'\nexport const LOAD_EVENT_FAILURE = 'LOAD_EVENT_FAILURE'\n\n\nexport const CLEAR_EVENT = 'CLEAR_EVENT'\n\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\n    switch(action.type){\n        case CLEAR_EVENT:\n            draft.events = []\n            break\n\n        case LOAD_EVENT_REQUEST:\n            draft.loadEventLoading = true\n            draft.loadEventDone = false\n            draft.loadEventError = null\n            break\n        case LOAD_EVENT_SUCCESS:\n            draft.loadEventLoading = false\n            draft.loadEventDone = true\n            draft.events=[]\n            draft.events=draft.events.concat(action.data)\n           \n            break\n        case LOAD_EVENT_FAILURE:\n            draft.loadEventLoading = false\n            draft.loadEventError = action.error\n            break\n            default:\n                break\n    }\n})\n\nexport default reducer","import produce  from 'immer'\n\nconst initialState = {\n  routineModal: false,\n  createRoutineModal: false,\n  modifyHabitModal: false,\n  alertModal : false,\n  confirmModal : false,\n  alertModalMessage : '',\n  createEventModal: false,\n  modifyEventModal: false,\n  addressModal: false,\n\n  addressInfo:{},\n  alertModalFunction : ()=>{}\n}\n\n\n\nexport const OPEN_ALERT_MODAL = 'OPEN_ALERT_MODAL'\nexport const CLOSE_ALERT_MODAL = 'CLOSE_ALERT_MODAL'\nexport const TOGGLE_ALERT_MODAL = 'TOGGLE_ALERT_MODAL'\n\nexport const OPEN_CONFIRM_MODAL = 'OPEN_CONFIRM_MODAL'\nexport const CLOSE_CONFIRM_MODAL = 'CLOSE_CONFIRM_MODAL'\nexport const TOGGLE_CONFIRM_MODAL = 'TOGGLE_CONFIRM_MODAL'\n\nexport const SET_ALERT_MODAL_FUNCTION = 'SET_ALERT_MODAL_FUNCTION'\nexport const SET_ALERT_MODAL_MESSAGE = 'SET_ALERT_MODAL_MESSAGE'\n\n\n\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\n  switch(action.type) {\n    case OPEN_ALERT_MODAL:\n      draft.alertModal = true\n      draft.alertModalMessage = action.message\n      break\n    case TOGGLE_ALERT_MODAL:\n      draft.alertModal = !draft.alertModal\n      break\n    case CLOSE_ALERT_MODAL:\n      draft.alertModal = false\n      draft.alertModalMessage = ''\n      break\n\n    case OPEN_CONFIRM_MODAL:\n      draft.confirmModal = true\n      draft.alertModalMessage = action.message\n      break\n    case TOGGLE_CONFIRM_MODAL:\n      draft.confirmModal = !draft.confirmModal\n      break\n    case CLOSE_CONFIRM_MODAL:\n      draft.confirmModal = false\n      draft.alertModalMessage = ''\n      break\n    case SET_ALERT_MODAL_FUNCTION:\n      draft.alertModalFunction = action.alertModalFunction\n      break\n    case SET_ALERT_MODAL_MESSAGE:\n      draft.alertModalMessage = action.message\n      break\n  }\n})\n\nexport default reducer","import produce from 'immer'\n\nconst initialState = {\n  updateMyInfoLoading: false, // 유저 정보 가져오기 시도 중\n  updateMyInfoDone: false,\n  updateMyInfoError: null,\n  loadMyInfoLoading: false, // 유저 정보 가져오기 시도 중\n  loadMyInfoDone: false,\n  loadMyInfoError: null,\n  logInLoading: false, // 로그인 시도 중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false, // 로그아웃 시도중\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false, // 회원가입 시도중\n  signUpDone: false,\n  signUpError: null,\n  me: null,\n  isSignUp: false,\n}\n\nexport const UPDATE_MY_INFO_REQUEST = 'UPDATE_MY_INFO_REQUEST'\nexport const UPDATE_MY_INFO_SUCCESS = 'UPDATE_MY_INFO_SUCCESS'\nexport const UPDATE_MY_INFO_FAILURE = 'UPDATE_MY_INFO_FAILURE'\n\nexport const LOAD_MY_INFO_REQUEST = 'LOAD_MY_INFO_REQUEST'\nexport const LOAD_MY_INFO_SUCCESS = 'LOAD_MY_INFO_SUCCESS'\nexport const LOAD_MY_INFO_FAILURE = 'LOAD_MY_INFO_FAILURE'\n\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST'\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'\n\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST'\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS'\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'\n\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST'\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS'\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE'\n\nexport const CHANGE_SIGN_UP_MODE = 'CHANGE_SIGN_UP_MODE'\n\nexport const loginRequestAction = (data) => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  }\n}\n\nexport const logoutRequestAction = () => {\n  return {\n    type: LOG_OUT_REQUEST\n  }\n}\n\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\n  switch (action.type) {\n    case UPDATE_MY_INFO_REQUEST:\n      draft.updateMyInfoLoading = true\n      draft.updateMyInfoDone = false\n      draft.updateMyInfoError = null\n      break\n    case UPDATE_MY_INFO_SUCCESS:\n      draft.updateMyInfoLoading = false\n      draft.updateMyInfoDone = true\n      draft.me.age = action.data.age\n      draft.me.gender = action.data.gender\n      draft.me.nickname = action.data.nickname\n      draft.me.phone_number = action.data.phone_number\n      draft.me.post_code = action.data.post_code\n      draft.me.main_address = action.data.main_address\n      draft.me.sub_address = action.data.sub_address\n      break\n    case UPDATE_MY_INFO_FAILURE:\n      draft.updateMyInfoLoading = false\n      draft.updateMyInfoError = action.error\n      break\n    case LOAD_MY_INFO_REQUEST:\n      draft.loadMyInfoLoading = true\n      draft.loadMyInfoDone = false\n      draft.loadMyInfoError = null\n      break\n    case LOAD_MY_INFO_SUCCESS:\n      draft.loadMyInfoLoading = false\n      draft.loadMyInfoDone = true\n      draft.me = action.data\n      break\n    case LOAD_MY_INFO_FAILURE:\n      draft.loadMyInfoLoading = false\n      draft.loadMyInfoError = action.error\n      break\n    case LOG_IN_REQUEST:\n      draft.logInLoading = true\n      draft.logInDone = false\n      draft.logInError = null\n      break\n    case LOG_IN_SUCCESS:\n      draft.logInLoading = false\n      draft.logInDone = true\n      draft.me = action.data\n      break\n    case LOG_IN_FAILURE:\n      draft.logInLoading = false\n      draft.logInError = action.error\n      break\n    case LOG_OUT_REQUEST:\n      draft.logOutLoading = true\n      draft.logOutDone = false\n      draft.logOutError = null\n      break\n    case LOG_OUT_SUCCESS:\n      draft.logOutLoading = false\n      draft.logOutDone = true\n      draft.me = null\n      break\n    case LOG_OUT_FAILURE:\n      draft.logOutLoading = false\n      draft.logOutError = action.error\n      break\n    case SIGN_UP_REQUEST:\n      draft.signUpLoading = true\n      draft.signUpDone = false\n      draft.signUpError = null\n      break\n    case SIGN_UP_SUCCESS:\n      draft.signUpLoading = false\n      draft.signUpDone = true\n      break\n    case SIGN_UP_FAILURE:\n      draft.signUpLoading = false\n      draft.signUpError = action.error\n      break\n    case CHANGE_SIGN_UP_MODE:\n      draft.isSignUp = !draft.isSignUp\n      break\n  }\n})\n\nexport default reducer","import produce from 'immer'\n\nconst initialState = {\n    loadWeatherLoading: false, \n    loadWeatherDone: false,\n    loadWeatherError: null,\n\n    weatherDong:'',\n    nowWeather:{},\n    expectedWeathers:[],\n}\n\nexport const LOAD_WEATHER_REQUEST = 'LOAD_WEATHER_REQUEST'\nexport const LOAD_WEATHER_SUCCESS = 'LOAD_WEATHER_SUCCESS'\nexport const LOAD_WEATHER_FAILURE = 'LOAD_WEATHER_FAILURE'\n\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\n  switch(action.type) {\n    case LOAD_WEATHER_REQUEST:\n      draft.loadWeatherLoading = true\n      draft.loadWeatherDone = false\n      draft.loadWeatherError = null\n      break\n    case LOAD_WEATHER_SUCCESS:\n      draft.loadWeatherLoading = false\n      draft.loadWeatherDone = true\n      draft.weatherDong = action.data.dong\n      const daily = action.data.weather.daily\n      const hourly = action.data.weather.hourly\n      draft.nowWeather={\n            date : new Date(daily[0].dt*1000),\n            minTemp: daily[0].temp.min,\n            maxTemp: daily[0].temp.max,\n            nowTemp: hourly[0].temp,\n            weather: hourly[0].weather[0]\n      }\n      draft.expectedWeathers=[]\n      for(let i=1;i<6;i++){\n        draft.expectedWeathers.push({\n            date : new Date(daily[i].dt*1000),\n            minTemp: daily[i].temp.min,\n            maxTemp: daily[i].temp.max,\n            weather: daily[i].weather[0]\n        })\n      }\n      break\n    case LOAD_WEATHER_FAILURE:\n      draft.loadWeatherLoading = false\n      draft.loadWeatherError = action.error\n      break\n      default:\n        break\n  }\n})\n\nexport default reducer","import produce from 'immer'\n\nconst initialState = {\n  myRoutines: [],\n  myHabits:[],\n\n  // addRoutineLoading: false,\n  // addRoutineDone: false,\n  // addRoutineError: null,\n\n  // loadMyRoutinesLoading: false,\n  // loadMyRoutinesDone: false,\n  // loadMyRoutinesError: null,\n\n  loadTodayRoutinesLoading: false,\n  loadTodayRoutinesDone: false,\n  loadTodayRoutinesError: null,\n\n  // deleteRoutineLoading: false,\n  // deleteRoutineDone : false,\n  // deleteRoutineError : null,\n\n  // modifyRoutineLoading: false,\n  // modifyRoutineDone : false,\n  // modifyRoutineError : null,\n\n  // addRoutinizedHabitLoading: false,\n  // addRoutinizedHabitDone: false,\n  // addRoutinizedHabitError: null,\n\n  // deleteRoutinizedHabitLoading: false,\n  // deleteRoutinizedHabitDone: false,\n  // deleteRoutinizedHabitError: null,\n\n  checkRoutinizedHabitLoading: false,\n  checkRoutinizedHabitDone: false,\n  checkRoutinizedHabitError: null,\n\n  checkRoutineLoading: false,\n  checkRoutineDone: false,\n  checkRoutineError: null,\n\n  // setOrderLoading: false,\n  // setOrderDone:false,\n  // setOrderError:null,\n\n  choosedRoutine : -1,\n  choosedRoutinizedHabit : -1,\n}\n\nexport const LOAD_TODAY_ROUTINES_REQUEST = 'LOAD_TODAY_ROUTINES_REQUEST'\nexport const LOAD_TODAY_ROUTINES_SUCCESS = 'LOAD_TODAY_ROUTINES_SUCCESS'\nexport const LOAD_TODAY_ROUTINES_FAILURE = 'LOAD_TODAY_ROUTINES_FAILURE'\n\nexport const CHECK_ROUTINIZED_HABIT_REQUEST = 'CHECK_ROUTINIZED_HABIT_REQUEST'\nexport const CHECK_ROUTINIZED_HABIT_SUCCESS = 'CHECK_ROUTINIZED_HABIT_SUCCESS'\nexport const CHECK_ROUTINIZED_HABIT_FAILURE = 'CHECK_ROUTINIZED_HABIT_FAILURE'\n\nexport const CHECK_ROUTINE_REQUEST = 'CHECK_ROUTINE_REQUEST'\nexport const CHECK_ROUTINE_SUCCESS = 'CHECK_ROUTINE_SUCCESS'\nexport const CHECK_ROUTINE_FAILURE = 'CHECK_ROUTINE_FAILURE'\n\nexport const CLEAR_MY_ROUTINES = 'CLEAR_MY_ROUTINES'\n\nexport const SET_CHOOSED_ROUTINIZED_HABIT='SET_CHOOSED_ROUTINIZED_HABIT';\nexport const SET_CHOOSED_ROUTINE='routine/setChoosedRoutine';\n\n\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\n  switch (action.type) {\n    case CLEAR_MY_ROUTINES:\n      draft.myRoutines = []\n      break\n    case LOAD_TODAY_ROUTINES_REQUEST:\n      draft.loadTodayRoutinesLoading = true\n      draft.loadTodayRoutinesDone = false\n      draft.loadTodayRoutinesError = null\n      break\n    case LOAD_TODAY_ROUTINES_SUCCESS:\n      draft.loadTodayRoutinesLoading = false\n      draft.loadTodayRoutinesDone = true\n      draft.myRoutines = []\n      for(let i=0;i<action.data.length;i++){\n        action.data[i].RoutinizedHabits.sort((a,b)=>{return a.order-b.order})\n        action.data[i].RoutineActiveDays.sort((a,b)=>{return a.day_of_week-b.day_of_week})\n      }\n      draft.myRoutines = draft.myRoutines.concat(action.data)\n      draft.myRoutines.sort((a,b)=>{return a.DailyAchieveRoutines.length-b.DailyAchieveRoutines.length})\n      break\n    case LOAD_TODAY_ROUTINES_FAILURE:\n      draft.loadTodayRoutinesLoading = false\n      draft.loadTodayRoutinesError = action.error\n      break\n    case CHECK_ROUTINIZED_HABIT_REQUEST:\n      draft.checkRoutinizedHabitLoading = true\n      draft.checkRoutinizedHabitDone = false\n      draft.checkRoutinizedHabitError = null\n      break\n    case CHECK_ROUTINIZED_HABIT_SUCCESS:\n      draft.checkRoutinizedHabitLoading = false\n      draft.checkRoutinizedHabitDone = true\n      draft.myRoutines[action.routineIdx].RoutinizedHabits[action.routinizedHabitIdx].DailyAchieveHabits.push(action.data)\n      break\n    case CHECK_ROUTINIZED_HABIT_FAILURE:\n      draft.checkRoutinizedHabitLoading = false\n      draft.checkRoutinizedHabitError = action.error\n      break\n\n    case CHECK_ROUTINE_REQUEST:\n        draft.checkRoutineLoading = true\n        draft.checkRoutineDone = false\n        draft.checkRoutineError = null\n        break\n    case CHECK_ROUTINE_SUCCESS:\n        draft.checkRoutineLoading = false\n        draft.checkRoutineDone = true\n        draft.myRoutines[action.routineIdx].DailyAchieveRoutines.push(action.data)\n        break\n    case CHECK_ROUTINE_FAILURE:\n        draft.checkRoutineLoading = false\n        draft.checkRoutineError = action.error\n        break\n    case SET_CHOOSED_ROUTINE:\n      draft.choosedRoutine = action.idx\n      draft.choosedRoutinizedHabit = -1\n      break\n    case SET_CHOOSED_ROUTINIZED_HABIT:\n      draft.choosedRoutinizedHabit = action.idx\n      break\n  }\n})\n\nexport default reducer","import produce from 'immer'\n// import { PURGE } from 'redux-persist/es/constants'\n\nconst initialState = {\n  challenges: [],         // 전체 챌린지 목록\n  singleChallenge: null,  // 챌린지 하나\n  newChallenges: [],      // 신규 챌린지 목록\n  recChallenges: [],      // 추천 챌린지 목록\n  myChallenges: [],       // 내가 참여하는 챌린지 목록\n  myChallenge: null,      // 내가 참여하는 챌린지 하나\n  myCreateChallenges: [], // 내가 생성한 챌린지 목록\n  searchChallenges: [],\n  challengeImagePath: '', // 챌린지 대표 이미지 경로\n  /*********************************************************** */\n  uploadChallengeImageLoading: false, // 챌린지 대표 이미지 업로드 중\n  uploadChallengeImageDone: false,\n  uploadChallengeImageError: null,\n  /*********************************************************** */\n  addChallengeLoading: false, // 챌린지 생성 중\n  addChallengeDone: false,\n  addChallengeError: null,\n  /*********************************************************** */\n  loadChallengesLoading: false,\n  loadChallengesDone: false,\n  loadChallengesError: null,\n  /*********************************************************** */\n  // loadChallengeLoading: false,\n  // loadChallengeDone: false,\n  // loadChallengeError: null,\n  /*********************************************************** */\n  loadNewChallengesLoading: false,\n  loadNewChallengesDone: false,\n  loadNewChallengesError: null,\n  /*********************************************************** */\n  loadRecChallengesLoading: false,\n  loadRecChallengesDone: false,\n  loadRecChallengesError: null,\n  /*********************************************************** */\n  loadMyChallengesLoading: false,\n  loadMyChallengesDone: false,\n  loadMyChallengesError: null,\n  /*********************************************************** */\n  loadMyCreateChallengesLoading: false,\n  loadMyCreateChallengesDone: false,\n  loadMyCreateChallengesError: null,\n  /*********************************************************** */\n  participateChallengeLoading: false,\n  participateChallengeDone: false,\n  participateChallengeError: null,\n  /*********************************************************** */\n  certifyChallengeLoading: false,\n  certifyChallengeDone: false,\n  certifyChallengeError: null,\n  /*********************************************************** */\n  likeChallengeLoading: false,\n  likeChallengeDone: false,\n  likeChallengeError: null,\n  /*********************************************************** */\n  unlikeChallengeLoading: false,\n  unlikeChallengeDone: false,\n  unlikeChallengeError: null,\n  /*********************************************************** */\n  searchChallengeLoading: false,\n  searchChallengeDone: false,\n  searchChallengeError: null,\n  /*********************************************************** */\n  deleteChallengeParticipationLoading: false,\n  deleteChallengeParticipationDone: false,\n  deleteChallengeParticipationError: null,\n}\n\nexport const UPLOAD_CHALLENGE_IMAGE_REQUEST = 'UPLOAD_CHALLENGE_IMAGE_REQUEST'\nexport const UPLOAD_CHALLENGE_IMAGE_SUCCESS = 'UPLOAD_CHALLENGE_IMAGE_SUCCESS'\nexport const UPLOAD_CHALLENGE_IMAGE_FAILURE = 'UPLOAD_CHALLENGE_IMAGE_FAILURE'\n\nexport const ADD_CHALLENGE_REQUEST = 'ADD_CHALLENGE_REQUEST'\nexport const ADD_CHALLENGE_SUCCESS = 'ADD_CHALLENGE_SUCCESS'\nexport const ADD_CHALLENGE_FAILURE = 'ADD_CHALLENGE_FAILURE'\n\n// 전체 챌린지 그냥 쌓인 순서대로 불러오기\nexport const LOAD_CHALLENGES_REQUEST = 'LOAD_CHALLENGES_REQUEST'\nexport const LOAD_CHALLENGES_SUCCESS = 'LOAD_CHALLENGES_SUCCESS'\nexport const LOAD_CHALLENGES_FAILURE = 'LOAD_CHALLENGES_FAILURE'\n\n// 챌린지 상세 페이지를 위한 하나의 챌린지 불러오기\nexport const LOAD_CHALLENGE_REQUEST = 'LOAD_CHALLENGE_REQUEST'\nexport const LOAD_CHALLENGE_SUCCESS = 'LOAD_CHALLENGE_SUCCESS'\nexport const LOAD_CHALLENGE_FAILURE = 'LOAD_CHALLENGE_FAILURE'\n\n// 신규 챌린지 불러오기\nexport const LOAD_NEW_CHALLENGES_REQUEST = 'LOAD_NEW_CHALLENGES_REQUEST'\nexport const LOAD_NEW_CHALLENGES_SUCCESS = 'LOAD_NEW_CHALLENGES_SUCCESS'\nexport const LOAD_NEW_CHALLENGES_FAILURE = 'LOAD_NEW_CHALLENGES_FAILURE'\n\n// 추천 챌린지 불러오기\nexport const LOAD_REC_CHALLENGES_REQUEST = 'LOAD_REC_CHALLENGES_REQUEST'\nexport const LOAD_REC_CHALLENGES_SUCCESS = 'LOAD_REC_CHALLENGES_SUCCESS'\nexport const LOAD_REC_CHALLENGES_FAILURE = 'LOAD_REC_CHALLENGES_FAILURE'\n\n// 내가 참여하고 있는 챌린지 불러오기\nexport const LOAD_MY_CHALLENGES_REQUEST = 'LOAD_MY_CHALLENGES_REQUEST'\nexport const LOAD_MY_CHALLENGES_SUCCESS = 'LOAD_MY_CHALLENGES_SUCCESS'\nexport const LOAD_MY_CHALLENGES_FAILURE = 'LOAD_MY_CHALLENGES_FAILURE'\n\n// 내가 생성한 챌린지 불러오기\nexport const LOAD_MY_CREATE_CHALLENGES_REQUEST = 'LOAD_MY_CREATE_CHALLENGES_REQUEST'\nexport const LOAD_MY_CREATE_CHALLENGES_SUCCESS = 'LOAD_MY_CREATE_CHALLENGES_SUCCESS'\nexport const LOAD_MY_CREATE_CHALLENGES_FAILURE = 'LOAD_MY_CREATE_CHALLENGES_FAILURE'\n\n// 챌린지 참여하기\nexport const PARTICIPATE_CHALLENGE_REQUEST = 'PARTICIPATE_CHALLENGE_REQUEST'\nexport const PARTICIPATE_CHALLENGE_SUCCESS = 'PARTICIPATE_CHALLENGE_SUCCESS'\nexport const PARTICIPATE_CHALLENGE_FAILURE = 'PARTICIPATE_CHALLENGE_FAILURE'\nexport const CLEAR_PARTICIPATE_CHALLENGE = 'CLEAR_PARTICIPATE_CHALLENGE'\n\n// 챌린지 인증하기\nexport const CERTIFY_CHALLENGE_REQUEST = 'CERTIFY_CHALLENGE_REQUEST'\nexport const CERTIFY_CHALLENGE_SUCCESS = 'CERTIFY_CHALLENGE_SUCCESS'\nexport const CERTIFY_CHALLENGE_FAILURE = 'CERTIFY_CHALLENGE_FAILURE'\nexport const CLEAR_CERTIFY_CHALLENGE = 'CLEAR_CERTIFY_CHALLENGE'\n\n// 챌린지 좋아요\nexport const LIKE_CHALLENGE_REQUEST = 'LIKE_CHALLENGE_REQUEST'\nexport const LIKE_CHALLENGE_SUCCESS = 'LIKE_CHALLENGE_SUCCESS'\nexport const LIKE_CHALLENGE_FAILURE = 'LIKE_CHALLENGE_FAILURE'\n\n// 챌린지 안좋아요\nexport const UNLIKE_CHALLENGE_REQUEST = 'UNLIKE_CHALLENGE_REQUEST'\nexport const UNLIKE_CHALLENGE_SUCCESS = 'UNLIKE_CHALLENGE_SUCCESS'\nexport const UNLIKE_CHALLENGE_FAILURE = 'UNLIKE_CHALLENGE_FAILURE'\n\n// 챌린지 검색하기\nexport const SEARCH_CHALLENGE_REQUEST = 'SEARCH_CHALLENGE_REQUEST'\nexport const SEARCH_CHALLENGE_SUCCESS = 'SEARCH_CHALLENGE_SUCCESS'\nexport const SEARCH_CHALLENGE_FAILURE = 'SEARCH_CHALLENGE_FAILURE'\n\n// 참여중인 챌린지 탈퇴하기\nexport const DELETE_CHALLENGE_PARTICIPATION_REQUEST = 'DELETE_CHALLENGE_PARTICIPATION_REQUEST'\nexport const DELETE_CHALLENGE_PARTICIPATION_SUCCESS = 'DELETE_CHALLENGE_PARTICIPATION_SUCCESS'\nexport const DELETE_CHALLENGE_PARTICIPATION_FAILURE = 'DELETE_CHALLENGE_PARTICIPATION_FAILURE'\nexport const CLEAR_DELETE_CHALLENGE_PARTICIPATION = 'CLEAR_DELETE_CHALLENGE_PARTICIPATION'\n\n// 참여중인 챌린지의 상세정보 보여주기\nexport const SHOW_MY_CHALLENGE = 'SHOW_MY_CHALLENGE'\nexport const CLEAR_SHOW_MY_CHALLENGE = 'CLEAR_SHOW_MY_CHALLENGE'\n\n// 챌린지 하나의 정보 보여주기\nexport const SHOW_CHALLENGE = 'SHOW_CHALLENGE'\nexport const CLEAR_SHOW_CHALLENGE = 'CLEAR_SHOW_CHALLENGE'\n\nexport const CLEAR_CHALLENGES = 'CLEAR_CHALLENGES'\nexport const CLEAR_CHALLENGE = 'CLEAR_CHALLENGE'\nexport const CLEAR_MY_CHALLENGES = 'CLEAR_MY_CHALLENGES'\nexport const CLEAR_ADD_CHALLENGE_DONE = 'CLEAR_ADD_CHALLENGE_DONE'\nexport const CLEAR_LOAD_CHALLENGE_DONE = 'CLEAR_LOAD_CHALLENGE_DONE'\nexport const CLEAR_IMAGE_PATH = 'CLEAR_IMAGE_PATH'\n\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\n  switch (action.type) {\n    // case PURGE:\n    //   return { ...initialState }\n    case CLEAR_CHALLENGES:\n      draft.challenges = []\n      break\n    case CLEAR_CHALLENGE:\n      draft.singleChallenge = null\n      break\n    case CLEAR_MY_CHALLENGES:\n      draft.myChallenges = []\n      break\n    case CLEAR_ADD_CHALLENGE_DONE:\n      draft.addChallengeDone = false\n      break\n    case CLEAR_LOAD_CHALLENGE_DONE:\n      draft.loadChallengeDone = false\n      break\n    case CLEAR_IMAGE_PATH:\n      draft.challengeImagePath = ''\n      break\n    /*********************************************************** */\n    case UPLOAD_CHALLENGE_IMAGE_REQUEST:\n      draft.uploadChallengeImageLoading = true\n      draft.uploadChallengeImageDone = false\n      draft.uploadChallengeImageError = null\n      break\n    case UPLOAD_CHALLENGE_IMAGE_SUCCESS:\n      draft.uploadChallengeImageLoading = false\n      draft.uploadChallengeImagaDone = true\n      draft.challengeImagePath = action.data\n      break\n    case UPLOAD_CHALLENGE_IMAGE_FAILURE:\n      draft.uploadChallengeImageLoading = false\n      draft.uploadChallengeImageError = action.error\n      break\n    /*********************************************************** */\n    case ADD_CHALLENGE_REQUEST:\n      draft.addChallengeLoading = true\n      draft.addChallengeDone = false\n      draft.addChallengeError = null\n      break\n    case ADD_CHALLENGE_SUCCESS:\n      draft.addChallengeLoading = false\n      draft.addChallengeDone = true\n      draft.challengeImagePath = ''\n      break\n    case ADD_CHALLENGE_FAILURE:\n      draft.addChallengeLoading = false\n      draft.addChallengeError = action.error\n      break\n    /*********************************************************** */\n    case LOAD_CHALLENGES_REQUEST:\n      draft.loadChallengesLoading = true\n      draft.loadChallengesDone = false\n      draft.loadChallengesError = null\n      break\n    case LOAD_CHALLENGES_SUCCESS:\n      draft.loadChallengesLoading = false\n      draft.loadChallengesDone = true\n      draft.challenges = []\n      draft.challenges = draft.challenges.concat(action.data)\n      break\n    case LOAD_CHALLENGES_FAILURE:\n      draft.loadChallengesLoading = false\n      draft.loadChallengesError = action.error\n      break\n    /*********************************************************** */\n    // case LOAD_CHALLENGE_REQUEST:\n    //   draft.loadChallengeLoading = true\n    //   draft.loadChallengeDone = false\n    //   draft.loadChallengeError = null\n    //   break\n    // case LOAD_CHALLENGE_SUCCESS:\n    //   draft.loadChallengeLoading = false\n    //   draft.loadChallengeDone = true\n    //   draft.singleChallenge = null\n    //   draft.singleChallenge = action.data\n    //   break\n    // case LOAD_CHALLENGE_FAILURE:\n    //   draft.loadChallengeLoading = false\n    //   draft.loadChallengeError = action.error\n    //   break\n    /*********************************************************** */\n    case LOAD_NEW_CHALLENGES_REQUEST:\n      draft.loadNewChallengesLoading = true\n      draft.loadNewChallengesDone = false\n      draft.loadNewChallengesError = null\n      break\n    case LOAD_NEW_CHALLENGES_SUCCESS:\n      draft.loadNewChallengesLoading = false\n      draft.loadNewChallengesDone = true\n      draft.newChallenges = []\n      draft.newChallenges = draft.newChallenges.concat(action.data)\n      break\n    case LOAD_NEW_CHALLENGES_FAILURE:\n      draft.loadNewChallengesLoading = false\n      draft.loadNewChallengesError = action.error\n      break\n    /*********************************************************** */\n    case LOAD_REC_CHALLENGES_REQUEST:\n      draft.loadRecChallengesLoading = true\n      draft.loadRecChallengesDone = false\n      draft.loadRecChallengesError = null\n      break\n    case LOAD_REC_CHALLENGES_SUCCESS:\n      draft.loadRecChallengesLoading = false\n      draft.loadRecChallengesDone = true\n      draft.recChallenges = []\n      draft.recChallenges = draft.recChallenges.concat(action.data)\n      break\n    case LOAD_REC_CHALLENGES_FAILURE:\n      draft.loadRecChallengesLoading = false\n      draft.loadRecChallengesError = action.error\n      break\n    /*********************************************************** */\n    case LOAD_MY_CHALLENGES_REQUEST:\n      draft.loadMyChallengesLoading = true\n      draft.loadMyChallengesDone = false\n      draft.loadMyChallengesError = null\n      break\n    case LOAD_MY_CHALLENGES_SUCCESS:\n      draft.loadMyChallengesLoading = false\n      draft.loadMyChallengesDone = true\n      draft.myChallenges = []\n      draft.myChallenges = draft.myChallenges.concat(action.data)\n      break\n    case LOAD_MY_CHALLENGES_FAILURE:\n      draft.loadMyChallengesLoading = false\n      draft.loadMyChallengesError = action.error\n      break\n    /*********************************************************** */\n    case LOAD_MY_CREATE_CHALLENGES_REQUEST:\n      draft.loadMyCreateChallengesLoading = true\n      draft.loadMyCreateChallengesDone = false\n      draft.loadMyCreateChallengesError = null\n      break\n    case LOAD_MY_CREATE_CHALLENGES_SUCCESS:\n      draft.loadMyCreateChallengesLoading = false\n      draft.loadMyCreateChallengesDone = true\n      draft.myCreateChallenges = []\n      draft.myCreateChallenges = draft.myCreateChallenges.concat(action.data)\n      break\n    case LOAD_MY_CREATE_CHALLENGES_FAILURE:\n      draft.loadMyCreateChallengesLoading = false\n      draft.loadMyCreateChallengesError = action.error\n      break\n    /*********************************************************** */\n    case PARTICIPATE_CHALLENGE_REQUEST:\n      draft.participateChallengeLoading = true\n      draft.participateChallengeDone = false\n      draft.participateChallengeError = null\n      break\n    case PARTICIPATE_CHALLENGE_SUCCESS:\n      draft.participateChallengeLoading = false\n      draft.participateChallengeDone = true\n      draft.myChallenges = draft.myChallenges.concat(action.data)\n      break\n    case PARTICIPATE_CHALLENGE_FAILURE:\n      draft.participateChallengeLoading = false\n      draft.participateChallengeError = action.error\n      break\n    case CLEAR_PARTICIPATE_CHALLENGE:\n      draft.participateChallengeLoading = false\n      draft.participateChallengeDone = false\n      draft.participateChallengeError = null\n      break\n    /*********************************************************** */\n    case CERTIFY_CHALLENGE_REQUEST:\n      draft.certifyChallengeLoading = true\n      draft.certifyChallengeDone = false\n      draft.certifyChallengeError = null\n      break\n    case CERTIFY_CHALLENGE_SUCCESS: {\n      draft.certifyChallengeLoading = false\n      draft.certifyChallengeDone = true\n      draft.challengeImagePath = ''\n      const challenge = draft.myChallenges.find((v) => v.id === action.data.ChallengeParticipationId)\n      challenge.certification_count += 1\n      break\n    }\n    case CERTIFY_CHALLENGE_FAILURE:\n      draft.certifyChallengeLoading = false\n      draft.certifyChallengeError = action.error\n      break\n    case CLEAR_CERTIFY_CHALLENGE:\n      draft.certifyChallengeLoading = false\n      draft.certifyChallengeDone = false\n      draft.certifyChallengeError = null\n      break\n    /*********************************************************** */\n    case LIKE_CHALLENGE_REQUEST:\n      draft.likeChallengeLoading = true\n      draft.likeChallengeDone = false\n      draft.likeChallengeError = null\n      break\n    case LIKE_CHALLENGE_SUCCESS: {\n      const challenge = draft.challenges.find((v) => v.id === action.data.ChallengeId)\n      if (challenge) {\n        challenge.Likers.push({ id: action.data.UserId })\n      }\n      // console.log('1', challenge)\n      const oneChallenge = draft.singleChallenge\n      if (oneChallenge) {\n        oneChallenge.Likers.push({ id: action.data.UserId })\n      }\n      // console.log('2', oneChallenge)\n      const newChallenge = draft.newChallenges.find((v) => v.id === action.data.ChallengeId)\n      if (newChallenge) {\n        newChallenge.Likers.push({ id: action.data.UserId })\n      }\n      // console.log('3', newChallenge)\n      const recChallenge = draft.recChallenges.find((v) => v.id === action.data.ChallengeId)\n      if (recChallenge) {\n        recChallenge.Likers.push({ id: action.data.UserId })\n      }\n      // console.log('4', recChallenge)\n      const myChallenge = draft.myChallenges.map((v) => v.Challenge).find((v) => v.id === action.data.ChallengeId)\n      // console.log('4-1', myChallenge)\n      if (myChallenge) {\n        myChallenge.Likers.push({ id: action.data.UserId })\n      }\n      // console.log('5', myChallenge)\n      const myCreateChallenge = draft.myCreateChallenges.find((v) => v.id === action.data.ChallengeId)\n      if (myCreateChallenge) {\n        myCreateChallenge.Likers.push({ id: action.data.UserId })\n      }\n      // console.log('6', myCreateChallenge)\n      draft.likeChallengeLoading = false\n      draft.likeChallengeDone = true\n      break\n    }\n    case LIKE_CHALLENGE_FAILURE:\n      draft.likeChallengeLoading = false\n      draft.likeChallengeError = action.error\n      break\n    /*********************************************************** */\n    case UNLIKE_CHALLENGE_REQUEST:\n      draft.unlikeChallengeLoading = true\n      draft.unlikeChallengeDone = false\n      draft.unlikeChallengeError = null\n      break\n    case UNLIKE_CHALLENGE_SUCCESS: {\n      const challenge = draft.challenges.find((v) => v.id === action.data.ChallengeId)\n      if (challenge) {\n        challenge.Likers = challenge.Likers.filter((v) => v.id !== action.data.UserId)\n      }\n      // console.log('1', challenge)\n      const oneChallenge = draft.singleChallenge\n      if (oneChallenge) {\n        oneChallenge.Likers = oneChallenge.Likers.filter((v) => v.id !== action.data.UserId)\n      }\n      // console.log('2', oneChallenge)\n      const newChallenge = draft.newChallenges.find((v) => v.id === action.data.ChallengeId)\n      if (newChallenge) {\n        newChallenge.Likers = newChallenge.Likers.filter((v) => v.id !== action.data.UserId)\n      }\n      // console.log('3', newChallenge)\n      const recChallenge = draft.recChallenges.find((v) => v.id === action.data.ChallengeId)\n      if (recChallenge) {\n        recChallenge.Likers = recChallenge.Likers.filter((v) => v.id !== action.data.UserId)\n      }\n      // console.log('4', recChallenge)\n      const myChallenge = draft.myChallenges.map((v) => v.Challenge).find((v) => v.id === action.data.ChallengeId)\n      // console.log('4-1', myChallenge)\n      if (myChallenge) {\n        myChallenge.Likers = myChallenge.Likers.filter((v) => v.id !== action.data.UserId)\n      }\n      // console.log('5', myChallenge)\n      const myCreateChallenge = draft.myCreateChallenges.find((v) => v.id === action.data.ChallengeId)\n      if (myCreateChallenge) {\n        myCreateChallenge.Likers = myCreateChallenge.Likers.filter((v) => v.id !== action.data.UserId)\n      }\n      // console.log('6', myCreateChallenge)\n      draft.unlikeChallengeLoading = false\n      draft.unlikeChallengeDone = true\n      break\n    }\n    case UNLIKE_CHALLENGE_FAILURE:\n      draft.unlikeChallengeLoading = false\n      draft.unlikeChallengeError = action.error\n      break\n    /*********************************************************** */\n    case SEARCH_CHALLENGE_REQUEST:\n      draft.searchChallengeLoading = true\n      draft.searchChallengeDone = false\n      draft.searchChallengeError = null\n      break\n    case SEARCH_CHALLENGE_SUCCESS:\n      draft.searchChallengeLoading = false\n      draft.searchChallengeDone = true\n      draft.searchChallenges = []\n      draft.searchChallenges = draft.searchChallenges.concat(action.data)\n      break\n    case SEARCH_CHALLENGE_FAILURE:\n      draft.searchChallengeLoading = false\n      draft.searchChallengeError = action.error\n      break\n    /*********************************************************** */\n    case SHOW_MY_CHALLENGE:\n      const tempChallenge = draft.myChallenges.find((v) => v.id === action.data)\n      draft.myChallenge = tempChallenge\n      break\n    case CLEAR_SHOW_MY_CHALLENGE:\n      draft.myChallenge = null\n      break\n    /*********************************************************** */\n    case SHOW_CHALLENGE: {\n      const tempChallenge = draft.challenges.find((v) => v.id === action.data)\n      draft.singleChallenge = tempChallenge\n      break\n    }\n    case CLEAR_SHOW_CHALLENGE:\n      draft.singleChallenge = null\n      break\n    /*********************************************************** */\n    case DELETE_CHALLENGE_PARTICIPATION_REQUEST:\n      draft.deleteChallengeParticipationLoading = true\n      draft.deleteChallengeParticipationDone = false\n      draft.deleteChallengeParticipationError = null\n      break\n    case DELETE_CHALLENGE_PARTICIPATION_SUCCESS:\n      draft.deleteChallengeParticipationLoading = false\n      draft.deleteChallengeParticipationDone = true\n      draft.myChallenges = draft.myChallenges.filter((v) => v.id !== action.data)\n      break\n    case DELETE_CHALLENGE_PARTICIPATION_FAILURE:\n      draft.deleteChallengeParticipationLoading = false\n      draft.deleteChallengeParticipationError = action.error\n      break\n    case CLEAR_DELETE_CHALLENGE_PARTICIPATION:\n      draft.deleteChallengeParticipationLoading = false\n      draft.deleteChallengeParticipationDone = false\n      draft.deleteChallengeParticipationError = null\n      break\n    default:\n      break\n  }\n})\n\nexport default reducer","import produce from 'immer'\n\nconst initialState = {\n    openKeyboard: false,\n    keyInfo: {}\n}\n\nexport const OPEN_KEY_BOARD = 'OPEN_KEY_BOARD'\nexport const CLOSE_KEY_BOARD = 'CLOSE_KEY_BOARD'\nexport const TOGGLE_KEY_BOARD = 'TOGGLE_KEY_BOARD'\n\nexport const SET_KEY_INFO = 'SET_KEY_INFO'\n\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\n  switch(action.type) {\n    case OPEN_KEY_BOARD:\n      draft.openKeyboard = true\n      break\n    case TOGGLE_KEY_BOARD:\n      draft.openKeyboard = !draft.openKeyboard\n      break\n    case CLOSE_KEY_BOARD:\n      draft.openKeyboard = false\n      break\n    case SET_KEY_INFO:\n      draft.keyInfo = action.data\n      draft.keyInfo=false\n      break\n      default:break\n  }\n})\n\nexport default reducer","// import { HYDRATE } from \"next-redux-wrapper\"\nimport { combineReducers } from \"redux\"\nimport calendar from './calendar'\nimport modal from './modal'\nimport user from './user'\nimport weather from './weather'\nimport routine from './routine'\nimport challenge from './challenge'\nimport keyboard from './keyboard'\n// (이전상태, 액션) => 다음 상태\nconst rootReducer = (state, action) =>{\n    switch (action.type) {\n        default: {\n            const combinedReducer = combineReducers({\n                calendar,\n                modal,\n                user,\n                weather,\n                routine,\n                challenge,\n                keyboard\n            });\n            return combinedReducer(state, action)\n        }\n    }\n} \n\nexport default rootReducer","import { all, fork, put, takeLatest, call } from \"redux-saga/effects\";\nimport axios from 'axios'\nimport {\n  LOAD_EVENT_REQUEST,\n  LOAD_EVENT_SUCCESS,\n  LOAD_EVENT_FAILURE,\n} from '../reducers/calendar'\n\n  \n\nfunction loadEventAPI(){\n    console.log('load event 요청!')\n    return axios.get('/schedule')\n}\nfunction* loadEvent(){\n    try{\n        const result = yield call(loadEventAPI)\n        yield put({\n            type: LOAD_EVENT_SUCCESS,\n            data: result.data\n        })\n    } catch(error){\n        yield put({\n            type: LOAD_EVENT_FAILURE,\n            error: error.response.data\n        })\n    }\n}\n\nfunction* watchLoadEvent(){\n  yield takeLatest(LOAD_EVENT_REQUEST, loadEvent)\n}\nexport default function* challengeSaga() {\n    yield all([\n      fork(watchLoadEvent)\n    ])\n  }","import {\n  all,\n  fork,\n  put,\n  takeLatest,\n  call\n} from 'redux-saga/effects'\nimport axios from 'axios'\nimport {\n  LOG_IN_REQUEST,\n  LOG_IN_SUCCESS,\n  LOG_IN_FAILURE,\n  LOG_OUT_REQUEST,\n  LOG_OUT_SUCCESS,\n  LOG_OUT_FAILURE,\n  SIGN_UP_REQUEST,\n  SIGN_UP_SUCCESS,\n  SIGN_UP_FAILURE,\n\n  LOAD_MY_INFO_REQUEST,\n  LOAD_MY_INFO_SUCCESS,\n  LOAD_MY_INFO_FAILURE,\n\n\n} from '../reducers/user'\n\nfunction loadMyInfoAPI() {\n  return axios.get('/user')\n}\n\nfunction* loadMyInfo(action) {\n  try {\n      const result = yield call(loadMyInfoAPI)\n      yield put({\n          type: LOAD_MY_INFO_SUCCESS,\n          data: result.data\n      })\n  } catch (err) {\n      yield put({\n          type: LOAD_MY_INFO_FAILURE,\n          error: err.response.data\n      })\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', data)\n}\n\nfunction* logIn(action) {\n  try {\n      const result = yield call(logInAPI, action.data)\n      console.log(result)\n      yield put({\n          type: LOG_IN_SUCCESS,\n          data: result.data\n      })\n  } catch (err) {\n      yield put({\n          type: LOG_IN_FAILURE,\n          error: err.response.data\n      })\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/user/logout')\n}\n\nfunction* logOut() {\n  try {\n      const result = yield call(logOutAPI)\n      console.log(result)\n      yield put({\n          type: LOG_OUT_SUCCESS,\n      })\n  } catch (err) {\n      yield put({\n          type: LOG_OUT_FAILURE,\n          error: err.response.data\n      })\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/user/join', data)\n}\n\nfunction* signUp(action) {\n  try {\n      const result = yield call(signUpAPI, action.data)\n      console.log(result)\n      yield put({\n          type: SIGN_UP_SUCCESS,\n      })\n  } catch (err) {\n      yield put({\n          type: SIGN_UP_FAILURE,\n          error: err.response.data\n      })\n  }\n}\n\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo)\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn)\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut)\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp)\n}\n\nexport default function* userSaga() {\n  yield all([\n      fork(watchLogIn),\n      fork(watchLogOut),\n      fork(watchSignUp),\n      fork(watchLoadMyInfo),\n  ])\n}","import { all, fork, put, takeLatest, call } from \"redux-saga/effects\";\nimport axios from 'axios'\nimport {\n    LOAD_WEATHER_SUCCESS,\n    LOAD_WEATHER_REQUEST,\n    LOAD_WEATHER_FAILURE\n} from '../reducers/weather'\n\nfunction loadWeatherAPI(){\n    return axios.get('/weather')\n}\nfunction* loadWeather(){\n    try{\n        const result = yield call(loadWeatherAPI)\n\n        yield put({\n            type:LOAD_WEATHER_SUCCESS,\n            data: result.data\n        })\n    }catch(error){\n        yield put({\n            type:LOAD_WEATHER_FAILURE,\n            error\n        })\n    }\n}\n\n\nfunction* watchLoadWeather(){\n    yield takeLatest(LOAD_WEATHER_REQUEST, loadWeather)\n  }\n  export default function* weatherSaga() {\n      yield all([\n        fork(watchLoadWeather),\n      ])\n}","import { all, fork, put, takeLatest, call,  select } from \"redux-saga/effects\";\nimport axios from 'axios'\nimport {\n  LOAD_TODAY_ROUTINES_REQUEST,\n  LOAD_TODAY_ROUTINES_SUCCESS,\n  LOAD_TODAY_ROUTINES_FAILURE,\n\n  CHECK_ROUTINIZED_HABIT_REQUEST,\n  CHECK_ROUTINIZED_HABIT_SUCCESS,\n  CHECK_ROUTINIZED_HABIT_FAILURE,\n\n  CHECK_ROUTINE_REQUEST,\n  CHECK_ROUTINE_SUCCESS,\n  CHECK_ROUTINE_FAILURE,\n} from '../reducers/routine'\n\nconst myRoutines = state => {\n  return state.routine.myRoutines;\n}\n// function addRoutineAPI(data) {\n//   console.log('요청함!')\n//   return axios.post('/routine', data)\n// }\n\n// function* addRoutine(action) {\n//   try {\n//     const result = yield call(addRoutineAPI, action.data)\n//     console.log(result)\n//     yield put({\n//       type: ADD_ROUTINE_SUCCESS,\n//       data: result.data\n//     })\n//     yield put({\n//       type:OPEN_CONFIRM_MODAL,\n//       message:'루틴 등록이 완료되었습니다.'\n//     })\n//   } catch (error) {\n//     yield put({\n//       type: ADD_ROUTINE_FAILURE,\n//       error: error.response.data\n//     })\n//     yield put({\n//       type:OPEN_CONFIRM_MODAL,\n//       message:'루틴 등록에 실패했습니다. 다시 시도해주세요.'\n//     })\n//   }\n// }\n\n// function loadRoutinesAPI() {\n//   console.log('요청함!')\n//   return axios.get('/routine')\n// }\n\n// function* loadRoutines() {\n//   try {\n//     const result = yield call(loadRoutinesAPI)\n//     console.log(result)\n//     yield put({\n//       type: LOAD_MY_ROUTINES_SUCCESS,\n//       data: result.data\n//     })\n//   } catch (error) {\n//     yield put({\n//       type: LOAD_MY_ROUTINES_FAILURE,\n//       error: error.response.data\n//     })\n//   }\n// }\n\nfunction loadTodayRoutinesAPI(){\n  return axios.get('/routine/today')\n}\n\nfunction* loadTodayRoutines() {\n  try {\n    const result = yield call(loadTodayRoutinesAPI)\n    yield put({\n      type: LOAD_TODAY_ROUTINES_SUCCESS,\n      data: result.data\n    })\n  } catch (error) {\n    yield put({\n      type: LOAD_TODAY_ROUTINES_FAILURE,\n      error: error.response.data\n    })\n  }\n}\n\n// function deleteRoutineAPI(id){\n//   console.log('루틴 삭제')\n//   return axios.delete('/routine/'+id)\n// }\n// function* deleteRoutine(action){\n//   try{\n//     const result = yield call(deleteRoutineAPI, action.id)\n//     yield put({\n//       type: DELETE_ROUTINE_SUCCESS,\n//       idx: action.idx\n//     })\n//     yield put({\n//       type:OPEN_CONFIRM_MODAL,\n//       message:'루틴 삭제가 완료되었습니다.'\n//     })\n//   }catch(error){\n//     yield put({\n//       type: DELETE_ROUTINE_FAILURE,\n//       error: error.response.data\n//     })\n//     yield put({\n//       type:OPEN_CONFIRM_MODAL,\n//       message:'루틴 삭제에 실패했습니다. 다시 시도해주세요.'\n//     })\n//   }\n// }\n\n// function modifyRoutineAPI(data, id){\n//   console.log('루틴 수정')\n//   return axios.put('/routine/'+id, data)\n// }\n// function* modifyRoutine(action){\n//   try{\n//     const result = yield call(modifyRoutineAPI, action.data, action.id)\n//     yield put({\n//       type: MODIFY_ROUTINE_SUCCESS,\n//       data: result.data\n//     })\n//     yield put({\n//       type:OPEN_CONFIRM_MODAL,\n//       message:'루틴 수정이 완료되었습니다.'\n//     })\n//   }catch(error){\n//     yield put({\n//       type: MODIFY_ROUTINE_FAILURE,\n//       error: error.response.data\n//     })\n//     yield put({\n//       type:OPEN_CONFIRM_MODAL,\n//       message:'루틴 수정에 실패했습니다. 다시 시도해주세요.'\n//     })\n//   }\n// }\n\n// function addRoutinizedHabitAPI(data, id) {\n//   console.log('루틴 습관 등록 요청')\n//   return axios.post('/routinizedHabit/'+id, data)\n// }\n\n// function* addRoutinizedHabit(action) {\n//   try {\n//     const result = yield call(addRoutinizedHabitAPI, action.data, action.id)\n//     yield put({\n//       type: ADD_ROUTINIZED_HABIT_SUCCESS,\n//       data: result.data,\n//       name : action.name\n//     })\n//     yield put({\n//       type:OPEN_CONFIRM_MODAL,\n//       message:'루틴에 습관이 등록되었습니다.'\n//     })\n//     console.log(result);\n//   } catch (error) {\n//     yield put({\n//       type: ADD_ROUTINIZED_HABIT_FAILURE,\n//       error: error.response.data\n//     })\n//     yield put({\n//       type:OPEN_CONFIRM_MODAL,\n//       message:'루틴에 습관이 등록되지 않았습니다. 다시 시도해주세요.'\n//     })\n//   }\n// }\n\n// function deleteRoutinizedHabitAPI(id){\n//   console.log('루틴 습관 삭제 요청')\n//   return axios.delete('/routinizedHabit/'+id)\n// }\n// function* deleteRoutinizedHabit(action){\n//   try {\n//     const result = yield call(deleteRoutinizedHabitAPI, action.id)\n//     yield put({\n//       type: DELETE_ROUTINIZED_HABIT_SUCCESS,\n//       routineIdx: action.routineIdx , \n//       id: action.id\n//     })\n//     let routine = yield select(myRoutines)\n//     yield put({\n//       type: SET_ORDER_REQUEST,\n//       habits: routine[action.routineIdx].RoutinizedHabits,\n//       idx: action.routineIdx,\n//       message: true\n//     })\n//     console.log(result);\n//   } catch (error) {\n//     yield put({\n//       type: DELETE_ROUTINIZED_HABIT_FAILURE,\n//     })\n//     yield put({\n//       type:OPEN_CONFIRM_MODAL,\n//       message:'습관이 정상적으로 삭제되지 않았습니다. 다시 시도해주세요.'\n//     })\n//   }\n// }\n\nfunction checkRoutinizedHabitAPI(routineId, habitId){\n  console.log('루틴 습관 완료 체크 요청')\n  return axios.post('/routinizedHabit/', {routineId, habitId})\n}\n\nfunction* checkRoutinizedHabit(action){\n  try{\n    console.log(action.routineId, action.habitId)\n    const result = yield call(checkRoutinizedHabitAPI, action.routineId, action.habitId)\n    yield put({\n      type: CHECK_ROUTINIZED_HABIT_SUCCESS,\n      data: result.data,\n      routineIdx: action.routineIdx,\n      routinizedHabitIdx: action.routinizedHabitIdx\n    })\n\n    const routine = yield select(myRoutines)\n    if(routine[action.routineIdx].DailyAchieveRoutines.length) return //이미 완료된 루틴이라면 종료\n\n    const habits = routine[action.routineIdx].RoutinizedHabits\n\n    for(let item of habits){\n      if(!item.DailyAchieveHabits.length){\n        return //완료되지 않은 습관이 있다면 종료\n      }\n    }\n\n    yield put({\n      type: CHECK_ROUTINE_REQUEST,\n      routineIdx: action.routineIdx,\n      routineId: action.routineId,\n    })\n\n  }catch(error){\n    yield put({\n      type: CHECK_ROUTINIZED_HABIT_FAILURE,\n      error\n    })\n  }\n}\n\n// function setOrderAPI(habits, routineId){\n//   console.log('순서 저장')\n//   return axios.put('/routinizedHabit/order', {habits})\n// }\n\n// function* setOrder(action){\n//   try{\n//     const result = yield call(setOrderAPI,action.habits, action.routineId)\n//     yield put({\n//       type: SET_ORDER_SUCCESS,\n//       data: result.data,\n//       idx : action.idx\n//     })\n//     yield put({\n//       type:OPEN_CONFIRM_MODAL,\n//       message:action.message?'루틴 내 습관이 정상적으로 삭제되었습니다.':'순서 변경이 완료되었습니다.'\n//     })\n//     yield put({\n//       type: LOAD_MY_ROUTINES_REQUEST\n//     })\n//   }catch(error){\n//     yield put({\n//       type: SET_ORDER_FAILURE,\n//       error: error\n//     })\n//     yield put({\n//       type:OPEN_CONFIRM_MODAL,\n//       message:'순서 변경에 실패했습니다. 다시 시도해주세요.'\n//     })\n//   }\n\n// }\n\nfunction checkDailyAchieveRoutineAPI(routineId){\n  return axios.post('/routine/complete',{routineId})\n}\nfunction* checkDailyAchieveRoutine(action){\n  try{\n    yield call(checkDailyAchieveRoutineAPI, action.routineId)\n    yield put({\n      type: CHECK_ROUTINE_SUCCESS,\n      routineIdx: action.routineIdx,\n    })\n  }catch(error){\n    yield put({\n      type: CHECK_ROUTINE_FAILURE,\n      error\n    })\n  }\n}\n\n\n// function* watchAddRoutine() {\n//   yield takeLatest(ADD_ROUTINE_REQUEST, addRoutine)\n// }\n\n// function* watchLoadRoutines() {\n//   yield takeLatest(LOAD_MY_ROUTINES_REQUEST, loadRoutines)\n// }\n\nfunction* watchLoadTodayRoutines(){\n  yield takeLatest(LOAD_TODAY_ROUTINES_REQUEST, loadTodayRoutines)\n}\n\n// function* watchDeleteRoutine(){\n//   yield takeLatest(DELETE_ROUTINE_REQUEST, deleteRoutine)\n// }\n\n// function* watchModifyRoutine(){\n//   yield takeLatest(MODIFY_ROUTINE_REQUEST, modifyRoutine)\n// }\n// function* watchAddRoutinizedHabit() {\n//   yield takeLatest(ADD_ROUTINIZED_HABIT_REQUEST, addRoutinizedHabit)\n// }\n\n// function* watchDeleteRoutinizedHabit(){\n//   yield takeLatest(DELETE_ROUTINIZED_HABIT_REQUEST, deleteRoutinizedHabit)\n// }\n\nfunction* watchCheckRoutinizedHabit(){\n  yield takeLatest(CHECK_ROUTINIZED_HABIT_REQUEST, checkRoutinizedHabit)\n}\n\nfunction* watchCheckRoutine(){\n  yield takeLatest(CHECK_ROUTINE_REQUEST, checkDailyAchieveRoutine)\n}\n\n// function* watchSetOrder(){\n//   yield takeLatest(SET_ORDER_REQUEST, setOrder)\n// }\n\n\nexport default function* routineSaga() {\n  yield all([\n    // fork(watchAddRoutine),\n    // fork(watchLoadRoutines),\n    fork(watchLoadTodayRoutines),\n    // fork(watchDeleteRoutine),\n    // fork(watchModifyRoutine),\n    // fork(watchAddRoutinizedHabit),\n    // fork(watchDeleteRoutinizedHabit),\n    fork(watchCheckRoutinizedHabit),\n    fork(watchCheckRoutine),\n    // fork(watchSetOrder)\n  ])\n}","import { all, fork, put, takeLatest, call } from \"redux-saga/effects\";\nimport axios from 'axios'\nimport {\n  ADD_CHALLENGE_REQUEST,\n  ADD_CHALLENGE_SUCCESS,\n  ADD_CHALLENGE_FAILURE,\n  LOAD_CHALLENGES_REQUEST,\n  LOAD_CHALLENGES_SUCCESS,\n  LOAD_CHALLENGES_FAILURE,\n  LOAD_MY_CHALLENGES_REQUEST,\n  LOAD_MY_CHALLENGES_SUCCESS,\n  LOAD_MY_CHALLENGES_FAILURE,\n  LOAD_MY_CREATE_CHALLENGES_REQUEST,\n  LOAD_MY_CREATE_CHALLENGES_SUCCESS,\n  LOAD_MY_CREATE_CHALLENGES_FAILURE,\n  UPLOAD_CHALLENGE_IMAGE_REQUEST,\n  UPLOAD_CHALLENGE_IMAGE_SUCCESS,\n  UPLOAD_CHALLENGE_IMAGE_FAILURE,\n  LOAD_NEW_CHALLENGES_REQUEST,\n  LOAD_NEW_CHALLENGES_SUCCESS,\n  LOAD_NEW_CHALLENGES_FAILURE,\n  LOAD_REC_CHALLENGES_REQUEST,\n  LOAD_REC_CHALLENGES_SUCCESS,\n  LOAD_REC_CHALLENGES_FAILURE,\n  LOAD_CHALLENGE_REQUEST,\n  LOAD_CHALLENGE_SUCCESS,\n  LOAD_CHALLENGE_FAILURE,\n  PARTICIPATE_CHALLENGE_REQUEST,\n  PARTICIPATE_CHALLENGE_SUCCESS,\n  PARTICIPATE_CHALLENGE_FAILURE,\n  CERTIFY_CHALLENGE_REQUEST,\n  CERTIFY_CHALLENGE_SUCCESS,\n  CERTIFY_CHALLENGE_FAILURE,\n  LIKE_CHALLENGE_REQUEST,\n  LIKE_CHALLENGE_SUCCESS,\n  LIKE_CHALLENGE_FAILURE,\n  UNLIKE_CHALLENGE_REQUEST,\n  UNLIKE_CHALLENGE_SUCCESS,\n  UNLIKE_CHALLENGE_FAILURE,\n  SEARCH_CHALLENGE_REQUEST,\n  SEARCH_CHALLENGE_SUCCESS,\n  SEARCH_CHALLENGE_FAILURE,\n  DELETE_CHALLENGE_PARTICIPATION_REQUEST,\n  DELETE_CHALLENGE_PARTICIPATION_SUCCESS,\n  DELETE_CHALLENGE_PARTICIPATION_FAILURE,\n} from '../reducers/challenge'\n\nfunction uploadChallengeImageAPI(data) {\n  return axios.post('/challenge/image', data)\n}\n  \nfunction* uploadChallengeImage(action) {\n  try {\n    const result = yield call(uploadChallengeImageAPI, action.data)\n    console.log(result)\n    yield put({\n      type: UPLOAD_CHALLENGE_IMAGE_SUCCESS,\n      data: result.data\n    })\n  } catch (error) {\n    yield put({\n      type: UPLOAD_CHALLENGE_IMAGE_FAILURE,\n      error: error.response.data\n    })\n  }\n}\n\nfunction addChallengeAPI(data) {\n  return axios.post('/challenge', data)\n}\n  \nfunction* addChallenge(action) {\n  try {\n    const result = yield call(addChallengeAPI, action.data)\n    console.log(result)\n    yield put({\n      type: ADD_CHALLENGE_SUCCESS,\n      data: result.data\n    })\n  } catch (error) {\n    yield put({\n      type: ADD_CHALLENGE_FAILURE,\n      error: error.response.data\n    })\n  }\n}\n\nfunction loadChallengesAPI() {\n  return axios.get('/challenge')\n}\n\nfunction* loadChallenges() {\n  try {\n    const result = yield call(loadChallengesAPI)\n    console.log(result)\n    yield put({\n      type: LOAD_CHALLENGES_SUCCESS,\n      data: result.data\n    })\n  } catch (error) {\n    yield put({\n      type: LOAD_CHALLENGES_FAILURE,\n      error: error.response.data\n    })\n  }\n}\n\nfunction loadChallengeAPI(data) {\n  return axios.get(`/challenge/${data}`)\n}\n\nfunction* loadChallenge(action) {\n  try {\n    const result = yield call(loadChallengeAPI, action.data)\n    console.log(result)\n    yield put({\n      type: LOAD_CHALLENGE_SUCCESS,\n      data: result.data\n    })\n  } catch (error) {\n    yield put({\n      type: LOAD_CHALLENGE_FAILURE,\n      error: error.response.data\n    })\n  }\n}\n\nfunction loadNewChallengesAPI() {\n  return axios.get('/challenge/new')\n}\n\nfunction* loadNewChallenges() {\n  try {\n    const result = yield call(loadNewChallengesAPI)\n    console.log(result)\n    yield put({\n      type: LOAD_NEW_CHALLENGES_SUCCESS,\n      data: result.data\n    })\n  } catch (error) {\n    yield put({\n      type: LOAD_NEW_CHALLENGES_FAILURE,\n      error: error.response.data\n    })\n  }\n}\n\nfunction loadRecChallengesAPI() {\n  return axios.get('/challenge/recommended')\n}\n\nfunction* loadRecChallenges() {\n  try {\n    const result = yield call(loadRecChallengesAPI)\n    console.log(result)\n    yield put({\n      type: LOAD_REC_CHALLENGES_SUCCESS,\n      data: result.data\n    })\n  } catch (error) {\n    yield put({\n      type: LOAD_REC_CHALLENGES_FAILURE,\n      error: error.response.data\n    })\n  }\n}\n\n// 내가 참여하고 있는 챌린지 목록 불러오기\nfunction loadMyChallengesAPI() {\n  return axios.get('/challengeParticipation')\n}\n\nfunction* loadMyChallenges() {\n  try {\n    const result = yield call(loadMyChallengesAPI)\n    yield put({\n      type: LOAD_MY_CHALLENGES_SUCCESS,\n      data: result.data\n    })\n  } catch (error) {\n    yield put({\n      type: LOAD_MY_CHALLENGES_FAILURE,\n      error: error.response.data\n    })\n  }\n}\n\nfunction loadMyCreateChallengesAPI() {\n  return axios.get('/challenge/mychallenge')\n}\n\nfunction* loadMyCreateChallenges() {\n  try {\n    const result = yield call(loadMyCreateChallengesAPI)\n    yield put({\n      type: LOAD_MY_CREATE_CHALLENGES_SUCCESS,\n      data: result.data\n    })\n  } catch (error) {\n    yield put({\n      type: LOAD_MY_CREATE_CHALLENGES_FAILURE,\n      error: error.response.data\n    })\n  }\n}\n\nfunction participateChallengeAPI(data) {\n  return axios.post('/challengeParticipation', data)\n}\n\nfunction* participateChallenge(action) {\n  try {\n    const result = yield call(participateChallengeAPI, action.data)\n    yield put({\n      type: PARTICIPATE_CHALLENGE_SUCCESS,\n      data: result.data\n    })\n  } catch (error) {\n    yield put({\n      type: PARTICIPATE_CHALLENGE_FAILURE,\n      error: error.response.data\n    })\n  }\n}\n\nfunction certifyChallengeAPI(data) {\n  return axios.post(`/challengeParticipation/${data.challengeId}`, data)\n}\n\nfunction* certifyChallenge(action) {\n  try {\n    const result = yield call(certifyChallengeAPI, action.data)\n    yield put({\n      type: CERTIFY_CHALLENGE_SUCCESS,\n      data: result.data\n    })\n  } catch (error) {\n    yield put({\n      type: CERTIFY_CHALLENGE_FAILURE,\n      error: error.response.data\n    })\n  }\n}\n\nfunction likeChallengeAPI(data) {\n  return axios.patch(`/challenge/${data}/like`)\n}\n\nfunction* likeChallenge(action) {\n  try {\n    const result = yield call(likeChallengeAPI, action.data)\n    yield put({\n      type: LIKE_CHALLENGE_SUCCESS,\n      data: result.data\n    })\n  } catch (error) {\n    yield put({\n      type: LIKE_CHALLENGE_FAILURE,\n      error: error.response.data\n    })\n  }\n}\n\nfunction unlikeChallengeAPI(data) {\n  return axios.delete(`/challenge/${data}/like`)\n}\n\nfunction* unlikeChallenge(action) {\n  try {\n    const result = yield call(unlikeChallengeAPI, action.data)\n    yield put({\n      type: UNLIKE_CHALLENGE_SUCCESS,\n      data: result.data\n    })\n  } catch (error) {\n    yield put({\n      type: UNLIKE_CHALLENGE_FAILURE,\n      error: error.response.data\n    })\n  }\n}\n\nfunction searchChallengeAPI(data) {\n  return axios.post(`/challenge/search/${data}`)\n}\n\nfunction* searchChallenge(action) {\n  try {\n    const result = yield call(searchChallengeAPI, action.data)\n    yield put({\n      type: SEARCH_CHALLENGE_SUCCESS,\n      data: result.data\n    })\n  } catch (error) {\n    yield put({\n      type: SEARCH_CHALLENGE_FAILURE,\n      error: error.response.data\n    })\n  }\n}\n\nfunction deleteChallengeParticipationAPI(data) {\n  return axios.delete(`/challengeParticipation/${data}`)\n}\n\nfunction* deleteChallengeParticipation(action) {\n  try {\n    const result = yield call(deleteChallengeParticipationAPI, action.data)\n    yield put({\n      type: DELETE_CHALLENGE_PARTICIPATION_SUCCESS,\n      data: result.data\n    })\n  } catch (error) {\n    yield put({\n      type: DELETE_CHALLENGE_PARTICIPATION_FAILURE,\n      error: error.response.data\n    })\n  }\n}\n\nfunction* watchUploadChallengeImage() {\n  yield takeLatest(UPLOAD_CHALLENGE_IMAGE_REQUEST, uploadChallengeImage)\n}\n\nfunction* watchAddChallenge() {\n  yield takeLatest(ADD_CHALLENGE_REQUEST, addChallenge)\n}\n\nfunction* watchLoadChallenges() {\n  yield takeLatest(LOAD_CHALLENGES_REQUEST, loadChallenges)\n}\n\nfunction* watchLoadChallenge() {\n  yield takeLatest(LOAD_CHALLENGE_REQUEST, loadChallenge)\n}\n\nfunction* watchLoadNewChallenges() {\n  yield takeLatest(LOAD_NEW_CHALLENGES_REQUEST, loadNewChallenges)\n}\n\nfunction* watchLoadRecChallenges() {\n  yield takeLatest(LOAD_REC_CHALLENGES_REQUEST, loadRecChallenges)\n}\n\nfunction* watchLoadMyChallenges() {\n  yield takeLatest(LOAD_MY_CHALLENGES_REQUEST, loadMyChallenges)\n}\n\nfunction* watchLoadMyCreateChallenges() {\n  yield takeLatest(LOAD_MY_CREATE_CHALLENGES_REQUEST, loadMyCreateChallenges)\n}\n\nfunction* watchParticipateChallenge() {\n  yield takeLatest(PARTICIPATE_CHALLENGE_REQUEST, participateChallenge)\n}\n\nfunction* watchCertifyChallenge() {\n  yield takeLatest(CERTIFY_CHALLENGE_REQUEST, certifyChallenge)\n}\n\nfunction* watchLikeChallenge() {\n  yield takeLatest(LIKE_CHALLENGE_REQUEST, likeChallenge)\n}\n\nfunction* watchUnlikeChallenge() {\n  yield takeLatest(UNLIKE_CHALLENGE_REQUEST, unlikeChallenge)\n}\n\nfunction* watchSearchChallenge() {\n  yield takeLatest(SEARCH_CHALLENGE_REQUEST, searchChallenge)\n}\n\nfunction* watchDeleteChallengeParticipation() {\n  yield takeLatest(DELETE_CHALLENGE_PARTICIPATION_REQUEST, deleteChallengeParticipation)\n}\n\nexport default function* challengeSaga() {\n  yield all([\n    fork(watchUploadChallengeImage),\n    fork(watchAddChallenge),\n    fork(watchLoadChallenges),\n    fork(watchLoadChallenge),\n    fork(watchLoadNewChallenges),\n    fork(watchLoadRecChallenges),\n    fork(watchLoadMyChallenges),\n    fork(watchLoadMyCreateChallenges),\n    fork(watchParticipateChallenge),\n    fork(watchCertifyChallenge),\n    fork(watchLikeChallenge),\n    fork(watchUnlikeChallenge),\n    fork(watchSearchChallenge),\n    fork(watchDeleteChallengeParticipation),\n  ])\n}","import { withStyles } from '@material-ui/core/';\nimport { teal } from '@material-ui/core/colors';\n\nexport const backUrl = 'https://api.mirrorme.today';\n\nexport const categories = [\n    {\n      name: \"1\",\n      label: \"운동\",\n    },\n    {\n      name: \"2\",\n      label: \"공부\",\n    },\n    {\n      name: \"3\",\n      label: \"생활\",\n    },\n    {\n      name: \"4\",\n      label: \"식사\",\n    },\n    {\n      name: \"5\",\n      label: \"역량\",\n    },\n    {\n      name: \"6\",\n      label: \"취미\",\n    },\n    {\n      name: \"7\",\n      label: \"자산\",\n    }\n  ]\n  \n  export const convertCertType = (type) => {\n    const types = ['',\n      '매일',\n      '평일 매일',\n      '주말 매일',\n      '주 6일',\n      '주 5일',\n      '주 4일',\n      '주 3일',\n      '주 2일',\n      '주 1일'\n    ]\n    return types[type]\n  }\n  \n  export const convertNumDay = (type) => {\n    const types = [\n      '월',\n      '화',\n      '수',\n      '목',\n      '금',\n      '토',\n      '일'\n    ]\n    return types[type]\n  }\n  \n  export const convertDaysWeek = (type) => {\n    const weekNum = type/7\n    return weekNum + '주'\n  }\n  \n  export const advice = (type) => {\n    const types = [\n      '시작이 반이다! 당신의 도전에 MYME가 함께합니다!',\n      '벌써 지치신 건 아니죠? 멋지게 성공한 모습을 상상해보세요!',\n      '처음에는 습관이 우리를 만들지만 그다음은 습관이 우리를 만들어요!',\n      '도망쳐 다다른 곳에 낙원은 없습니다! 곧 반환점이에요! 파이팅!',\n      '컵에 물이 반이나 있네? 긍정적인 마음으로 꾸준함을 유지합시다!',\n      '끊임 없이 떨어지는 물방울은 돌에 구멍을 낸답니다. 우리도 한계에 구멍을 뚫어봅시다!',\n      '어느덧 고지가 보입니다. 가끔은 생각하지 않고 바로 움직이는 것이 도움이 됩니다!',\n      '노력한다고 모두 성공하지는 않지만 모든 성공한 사람은 꾸준히 노력했음을 잊지마세요!',\n      '포기하는 그 순간이 시합 종료임을 잊지마세요! 이제 거의 다 했어요!',\n      '시작할 때의 다짐이나 마음이 기억나시나요? 마음을 다잡고 마지막을 향해 봅시다!'\n    ]\n    return types[type]\n  }\n  \n  export const ColorTeal = withStyles((theme) => ({\n    root: {\n      color: theme.palette.getContrastText(teal[500]),\n      backgroundColor: teal[500],\n      '&:hover': {\n        backgroundColor: teal[700],\n      },\n    },\n  }))\n","import {\n    all,\n    fork,\n  } from 'redux-saga/effects'\n  import axios from 'axios'\n  \n  // import postSaga from \"./post\"\n  import calendarSaga from \"./calendar\"\n  import userSaga from './user'\n  import weatherSaga from './weather'\n  import routineSaga from './routine'\n  import challengeSaga from './challenge'\n  import { backUrl } from '../config/config'\n  \n  axios.defaults.baseURL = backUrl\n  axios.defaults.withCredentials = true\n  \n  export default function* rootSaga() {\n    yield all([\n        // fork(postSaga),\n        fork(calendarSaga),\n        fork(userSaga),\n        fork(weatherSaga),\n        fork(routineSaga),\n        fork(challengeSaga),\n\n    ])\n  }","import { applyMiddleware, compose, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport createSagaMiddleware from '@redux-saga/core'\n\nimport reducer from '../reducers'\nimport rootSaga from '../sagas'\n\nconst loggerMiddleware = ({ dispath, getState }) => (next) => (action) => {\n  console.log(action)\n  return next(action)\n}\n\nconst sagaMiddleware = createSagaMiddleware()\nconst middlewares = [sagaMiddleware, loggerMiddleware]\nconst enhancer = process.env.NODE_ENV === 'production'\n  ? compose(applyMiddleware(sagaMiddleware))\n  : composeWithDevTools(applyMiddleware(...middlewares))\nconst store = createStore(reducer, enhancer)\nstore.sagaTask = sagaMiddleware.run(rootSaga)\n\nexport default store","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  color:white;\n  background-color:black;\n  padding:30px;\n  height:1040px;\n \n  .listScroll{\n    position: relative;\n    overflow: auto;\n    -ms-overflow-style: none; /* IE, Edge */\n    scrollbar-width: none; /* Firefox */\n  }\n  .listScroll::-webkit-scrollbar {\n    display: none; /* Chrome, Safari, Opera */\n  }\n\n  & .am {\n    font-size: 20px;\n }\n  & .clock {  \n    font-size: 80px;\n  }  \n  & .date{\n    font-size: 27px;\n  }\n& .calendarTop{\n  height: 300px;\n}\n  & .calendar{\n    height: 100%;\n    left: 0;\n    right: 0;\n    bottom: 0;\n  }\n  & .routine{\n    \n  }\n& .MuiTabs-indicator {\n    display: none;\n  }\n  & .appbar {\n    top: 48px;\n    box-shadow: none;\n    /* transition: all 0.4s; */\n    &.appbar-shift {\n      width: calc(100% -280px);\n      margin-left: 280px;\n      /* transition: all 0.4s; */\n    }\n  }\n  & .tab {\n    padding: 0;\n    margin: 10px 5px;\n    border-radius: 5px;\n    min-width: 160px;\n    width: 200px;\n  }\n  & .tab-panel {\n    padding: 170px 0 20px 0;\n  }\n  .react-calendar {\n    width: 500px;\n  max-width: 100%;\n  border: 1px solid #a0a096;\n  font-family: Arial, Helvetica, sans-serif;\n  line-height: 1.500em;\n  float: right;\n  }\n \n  .react-calendar .react-calendar__navigation .react-calendar__navigation__label {\n    font-size: 25px;\n  }\n  .react-calendar .react-calendar__tile {\n    height: 70px;\n  }\n\n  .react-calendar .react-calendar__tile--active:enabled:hover, .react-calendar .react-calendar__tile--active:enabled:focus {\n    background: #e70220;\n  }\n  .react-calendar .react-calendar__tile, .react-calendar .react-calendar__month-view__days__day {\n    font-size: 18px;\n  }\n\n  .left-btn{\n    background-color:lightcoral;\n  }\n  .left-btn:hover{\n    background-color:indianred;\n  }\n  .right-btn{\n    background-color:cornflowerblue;\n    color:white;\n  }\n  .right-btn:hover{\n    background-color:royalblue;\n  }\n\n  .btn{\n    cursor:pointer\n  }\n  \n`;\n\nexport default Wrapper;\n","import React from 'react';\nimport Clock from 'react-live-clock';\nimport moment from 'moment'\n\nfunction App(){\n    const day =['일','월','화','수','목','금','토']\n    return(\n        <div style={{textAlign:'right'}}>\n            <div>\n                <Clock className=\"am\" format={'a'} filter={(date)=>{\n                    return date==='am'?'오전':'오후'\n                }} ticking={true} /*timezone={'KR/Republic'}*//>\n                <Clock className=\"clock\" format={'hh:mm'} ticking={true} /*timezone={'KR/Republic'}*//>\n                \n            </div>\n            <div>\n                <Clock className=\"date\" format={'YYYY-MM-DD'} ticking={true} filter={(date)=>{\n                    let now = moment(date)\n                    return (now.month()+1)+'월 ' +now.date()+'일 '+day[now.day()]+'요일'\n                }} /*timezone={'KR/Republic'}*//> &nbsp;\n            </div>\n        </div>\n    )\n}\nexport default App","import styled from 'styled-components';\nconst Wrapper = styled.div`\n    display:inline-block;\n    margin: 10px;\n    .typography{\n        text-align:center;\n    }\n    #weather-icon{\n        margin-top: -20px;\n        margin-left: -18px;\n        width: 110px;\n        height: auto;\n    }\n`;\nexport default Wrapper;","import React from 'react'\nimport Wrapper from './styles'\nimport {Grid, Typography} from '@material-ui/core'\n\nfunction App(props) {\n    let {item, idx} = props\n    const day =['일','월','화','수','목','금','토']\n    return(\n        <Wrapper>\n            <Grid container>\n                <Grid item md={6}>\n                    <Typography className='typography' style={{marginTop: \"15px\"}}>{item.date.getMonth()+1}/{item.date.getDate()}</Typography>\n                    <Typography variant='h5' className='typography' style={{letterSpacing:\"-1px\", marginTop: \"-9px\"}}>{day[item.date.getDay()]}</Typography>\n                </Grid>\n                <Grid item md={6}>\n                    <img src={'http://openweathermap.org/img/wn/'+item.weather.icon+'@2x.png'} alt='' id='weather-icon'></img>\n                </Grid>\n            </Grid>\n            {/* <img src={'http://openweathermap.org/img/wn/'+item.weather.icon+'@2x.png'} alt='' id='weather-icon'></img> */}\n            {/* <div id='min-max-temp'>\n            <span style={{color:'blue'}}>{Math.ceil(item.minTemp)}°</span>/\n            <span style={{color:'red'}}>{Math.ceil(item.maxTemp)}°</span>\n            </div> */}\n            {/* <p>{item.date.getMonth()+1}/{item.date.getDate()}({day[item.date.getDay()]})</p> */}\n        </Wrapper>\n    );\n}\nexport default App","import styled from 'styled-components';\nconst Wrapper = styled.div`\n    width: 900px;\n    margin-top: -30px;\n    margin-left: -30px;\n    #now-weather-icon{\n        width:150px;\n    }\n    #min-max-temp > *{\n        display:inline-block;\n    }\n\n    .text{\n        margin-top:-40px;\n    }\n\n    .text>h6{\n        font-size:25px;\n    }\n\n    #dong{\n        font-size:22px;\n        text-align: right;\n        width: 450px;\n    }\n\n    #next-weather{\n        position: absolute;\n        top: 70px;\n        left: 120px;\n    }\n    .MuiCardActions-root{\n        padding:0px;\n    }\n`;\nexport default Wrapper;","\nimport React,{useEffect} from 'react'\nimport weatherToKorean from '../weatherToKorean'\nimport Weather from '../WeatherComponent'\nimport Wrapper from './styles'\nimport {Typography,CardActions} from '@material-ui/core'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {LOAD_WEATHER_REQUEST} from '../../../reducers/weather'\n\n\nfunction App() {\n  const dispatch = useDispatch()\n  let {weatherDong, nowWeather,expectedWeathers} = useSelector((state)=> {return state.weather})\n  useEffect(()=>{\n    dispatch({\n      type:LOAD_WEATHER_REQUEST,\n    })\n  },[dispatch])\n  return (\n    <Wrapper>\n      {\n        !nowWeather.date?\n        null:\n        <>\n        <CardActions className='now-weather-div'>\n          <img src={'http://openweathermap.org/img/wn/'+nowWeather.weather.icon+'@2x.png'} alt='' id='now-weather-icon'></img>\n          <Typography  id='now-temp' className='text' style={{fontSize:'40px'}}>{Math.ceil(nowWeather.nowTemp)}°</Typography>\n          <Typography variant='h4' className='text' style={{fontSize:'30px',width: \"100px\", textAlign: \"center\"}}>{weatherToKorean(nowWeather.weather.id)}</Typography>\n          <div id='min-max-temp' className='text'>\n            <Typography variant='h6' style={{color:'deepskyblue'}}>{Math.ceil(nowWeather.minTemp)}°</Typography>\n            <Typography variant='h6' >/</Typography>\n            <Typography variant='h6' style={{color:'lightcoral'}}>{Math.ceil(nowWeather.maxTemp)}°</Typography>\n          </div>\n          <Typography id='dong' className='text'>{weatherDong}</Typography>\n        </CardActions>\n        <div id='next-weather'>\n          {\n            expectedWeathers.map((item, idx) =>(<Weather item={item} key={idx} idx={idx}></Weather>))\n          }\n        </div>\n        </>\n      }\n    </Wrapper>\n  );\n}\n\nexport default App;\n","export default function translate(id){\n    switch(Math.floor(id/100)){\n        case 2:\n            return '번개'\n        case 3:\n            return '이슬비'\n        case 5:\n            return '비'\n        case 6:\n            return '눈'\n        case 7:\n            return '안개'\n        case 8:\n            if(id===800){\n                return '맑음'\n            }else{\n                return '구름'\n            }\n        default:\n            return ''\n    }\n}","import {Card} from '@material-ui/core'\nimport { withStyles } from '@material-ui/styles'\nconst styles ={\n    root:{\n        border:'2px solid #ffffff',\n        backgroundColor:'black',\n        color:'white'\n    }\n}\nexport default withStyles(styles)(Card)","import styled from 'styled-components';\nimport CustomCard from '../CustomCard';\nconst Wrapper = styled(CustomCard)`\n    height: 428.41px;\n    .progress-header{\n        border-bottom: 2px solid #ffffff;\n        height:49px;\n        line-height:49px;\n    }\n    .content{\n        height: 354px;\n        overflow: auto;\n    }\n    \n`;\nexport default Wrapper;","import styled from 'styled-components';\nimport {ListItem} from '@material-ui/core';\nconst Wrapper = styled(ListItem)`\n    border-radius:4px;\n    border:2px solid #ffffff;\n    cursor: pointer;\n    &:hover{\n        background-color:#111111;\n    }\n    .text{\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        height:58px;\n        line-height:58px;\n    }\n\n    .achieve{\n        color:white;\n    }\n    .no-achieve{\n        color:deepskyblue;\n    }\n`;\nexport default Wrapper;","import React from 'react';\nimport Wrapper from './styles'\nimport { Grid} from '@material-ui/core'\nimport {SET_CHOOSED_ROUTINE} from '../../../reducers/routine'\nimport {useDispatch} from 'react-redux'\nimport moment from 'moment-timezone'\nfunction App(props){\n    const dispatch = useDispatch()\n    let {routine, idx} = props\n    function getDay(){\n        let day = moment().tz('Asia/Seoul')\n        day = day.day()===0?6:day.day()-1\n        return day\n      }\n    function getTime(time){\n        let timeArr = time.split(':')\n        \n        let am= Math.floor(timeArr[0]/12)===0?'오전':'오후'\n        let hour= timeArr[0]%12===0?12:timeArr[0]%12\n        hour= hour<10?`0${hour}`:hour\n        return am+' '+hour+':'+timeArr[1]\n    }\n    function setChoosedRoutine(){\n        dispatch({\n            type:SET_CHOOSED_ROUTINE,\n            idx:idx,\n        })\n    }\n    return(\n        <Wrapper onClick={setChoosedRoutine} className={routine.DailyAchieveRoutines.length?'achieve-div':'no-achieve-div'}>\n            <Grid container>\n                <Grid item xs={6} lg={8}>\n                    <h3 className={routine.DailyAchieveRoutines.length?'text achieve':'text no-achieve'}>{routine.name}</h3>\n                </Grid>\n                <Grid item xs={6} lg={4}>\n                    <p className='text' style={{textAlign:'right'}}>{getTime(routine.RoutineActiveDays[getDay()].start_time)} 시작</p>\n                </Grid>\n            </Grid>\n            {/* <ListItemText primary={routine.name}>\n            </ListItemText>\n            <ListItemSecondaryAction>\n                {getTime(routine.RoutineActiveDays[getDay()].start_time)} 시작\n            </ListItemSecondaryAction> */}\n        </Wrapper>\n    )\n}\nexport default App","import React from 'react';\nimport Wrapper from './styles'\nimport RoutineItem from '../RoutineItem'\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport {Typography, List,CardContent,CardActions} from '@material-ui/core'\nimport CustomCard from '../CustomCard'\nfunction App(props){\n    let {myRoutines} = props\n    return(\n        <Wrapper>\n            <CardActions className='progress-header'>\n            <ScheduleIcon/>\n            <Typography variant='h5'> 오늘의 루틴</Typography>\n            <div style={{display:'flex'}}>\n                <span style={{color:\"deepskyblue\"}}>■</span>\n                <span>할 일</span>\n                <span style={{color:\"white\"}}>■</span>\n                <span>완료</span>\n            </div>\n            </CardActions>\n            <CardContent className='content'>\n                <List>\n                {\n                    myRoutines.length!==0?\n                    <>\n                    {\n                        myRoutines.map((item, idx)=>(<RoutineItem routine={item} idx={idx} key={idx}/>))\n                    }\n                    </>\n                    :\n                    <CustomCard className='no-routine'>\n                        <Typography variant='p'>오늘 진행할 루틴이 없어요.<br/>\n                        웹사이트에서 루틴을 설정해주세요!\n                        </Typography>\n                    </CustomCard>\n                }\n                </List>\n            </CardContent>\n        </Wrapper>\n    )\n}\nexport default App","import styled from 'styled-components';\nimport CustomCard from '../CustomCard';\nconst Wrapper = styled(CustomCard)`\n    height: 428.41px;\n    .progress-header{\n        border-bottom: 2px solid #ffffff;\n        height:49px;\n        line-height:49px;\n    }\n    .content{\n        height: 354px;\n        overflow: auto;\n    }\n`;\nexport default Wrapper;","import styled from 'styled-components';\nimport {ListItem} from '@material-ui/core';\nconst Wrapper = styled(ListItem)`\n    border:2px solid #ffffff;\n    border-radius:4px;\n    background-color:#050505;\n    cursor: pointer;\n    &:hover{\n        background-color:#111111;\n    }\n    .habit-name{\n        height: 58px;\n        line-height: 58px;\n    }\n    .routine-title{\n        margin-left:26px;\n    }\n    .MuiCheckbox-colorSecondary.Mui-disabled{\n        color:#C2BDAC;\n    }\n`;\nexport default Wrapper;","import React from 'react';\nimport Wrapper from './styles'\nimport {Checkbox, Grid} from '@material-ui/core'\nimport {SET_CHOOSED_ROUTINIZED_HABIT} from '../../../reducers/routine'\nimport { useDispatch, useSelector } from 'react-redux';\nfunction App(props){\n    const dispatch = useDispatch()\n    let {choosedRoutinizedHabit} = useSelector((state)=>{return state.routine})\n    let {idx, routinizedHabit} = props\n    \n    function setChoosedRoutinizedHabit(){\n        props.stopInterval()\n        props.clearTime()\n        if(choosedRoutinizedHabit!==idx){\n            dispatch({type: SET_CHOOSED_ROUTINIZED_HABIT, idx:idx})\n        }else{\n            dispatch({type: SET_CHOOSED_ROUTINIZED_HABIT, idx:-1})\n        }\n    }\n    return(\n        <Wrapper onClick={setChoosedRoutinizedHabit}>\n            <Grid container>\n                <Grid item xs={9} md={10} xl={11}>\n                    <h3 className='habit-name'>{routinizedHabit.Habit.name}</h3>\n                </Grid>\n                <Grid item xs={3} md={2} xl={1} style={{lineHeight:'58px'}}>\n                    <Checkbox\n                    checked={routinizedHabit.DailyAchieveHabits.length===0?false:true}\n                    disabled\n                    />\n                </Grid>\n            </Grid>\n        </Wrapper>\n    )\n}\nexport default App","import React from 'react';\nimport Wrapper from './styles'\nimport RoutinizedHabitItem from '../RoutinizedHabitItem'\nimport {Typography, List,CardContent,CardActions} from '@material-ui/core'\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport CustomCard from '../CustomCard'\nfunction App(props){\n    let {routine, goBack} = props\n    return(\n        <Wrapper>\n            <CardActions className='progress-header'>\n            <ArrowBackIosIcon className='btn' onClick={goBack}/>\n            <Typography variant='h5'>{routine.name}</Typography>\n            </CardActions>\n                <CardContent className='content'>\n                <List>\n                    {\n                        routine.RoutinizedHabits.length!==0?\n                        <>\n                        {\n                            routine.RoutinizedHabits.map((item,idx)=>(\n                                <RoutinizedHabitItem idx={idx} key={idx} routinizedHabit={item} stopInterval={props.stopInterval} clearTime={props.clearTime}/>\n                            ))\n                        }\n                        </>\n                        :\n                        <CustomCard className='no-routine'>\n                            <Typography variant='p'>\n                            루틴 내 습관이 없어요!<br/>\n                            웹사이트에서 습관을 설정해주세요.\n                            </Typography>\n                        </CustomCard>\n                    }\n                </List>\n            </CardContent>\n        </Wrapper>\n    )\n}\nexport default App","import styled from 'styled-components';\nimport CustomCard from '../CustomCard';\nconst Wrapper = styled(CustomCard)`\n\n    .video-container {\n        position: relative;\n        padding-bottom: 56.25%;\n        padding-top: 30px;\n        height: 0;\n        overflow: hidden;\n    }\n    .video-container iframe,\n    .video-container object,\n    .video-container embed {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n    }\n    .MuiTab-root{\n        min-width:50px\n    }\n    .active-tab{\n        color:lightcoral;\n    }\n    .no-active-tab{\n        color:white;\n    }\n\n    .content-typography{\n        margin: 10px;\n    }\n    .progress-header{\n        border-bottom: 2px solid #ffffff;\n        padding-left: 20px;\n        height:49px;\n        line-height:49px;\n    }\n    .progress-footer{\n        border-top: 2px solid #ffffff;\n    }\n    .progress-article{\n        background-color:#050505;\n    }\n\n    .progress-btn{\n        color:white;\n    }\n    .progress-btn:hover{\n        color:deepskyblue;\n    }\n`;\nexport default Wrapper;","import React,{useState} from 'react';\nimport Wrapper from './styles'\nimport {Typography, CardContent, CardActions, Tabs, Tab, IconButton, Grid} from '@material-ui/core'\nimport YouTubeIcon from '@material-ui/icons/YouTube';\nimport NoteIcon from '@material-ui/icons/Note';\nimport PlayIcon from '@material-ui/icons/PlayArrow'\nimport PauseIcon from '@material-ui/icons/Pause'\nimport CheckIcon from '@material-ui/icons/CheckCircleOutline'\nimport NextIcon from '@material-ui/icons/SkipNext'\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\nimport ZoomOutIcon from '@material-ui/icons/ZoomOut';\nimport {SET_CHOOSED_ROUTINIZED_HABIT, CHECK_ROUTINIZED_HABIT_REQUEST} from '../../../reducers/routine'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nfunction App(props){\n    const { enqueueSnackbar } = useSnackbar();\n    const dispatch = useDispatch()\n    let [tabValue, setTabValue] = useState(0)\n    let {choosedRoutine, choosedRoutinizedHabit, zoomIn, changeZoomIn, changeZoomOut} = props\n    let {myRoutines} = useSelector((state)=>{return state.routine})\n    const routinizedHabit = myRoutines[choosedRoutine].RoutinizedHabits[choosedRoutinizedHabit]\n    const habit = routinizedHabit.Habit\n    const dailyAchieveHabits = routinizedHabit.DailyAchieveHabits\n    let {time,timeInterval} = props\n    let min = Math.floor(time/60)\n    let sec = time%60\n\n    let requiredTime = habit.time_required*60\n\n    let requiredMin = Math.floor(requiredTime/60)\n    let requiredSec = requiredTime%60\n    function isChecked(){\n        if(dailyAchieveHabits!== undefined && dailyAchieveHabits.length){\n        return true\n        }\n        return false\n    }\n\n    function run(){\n        if(isChecked()){\n            enqueueSnackbar('오늘 이미 완료한 습관입니다.',{variant:'warning'});\n            return\n        }else if(isChecked() || isAlreadyComplete()){\n            enqueueSnackbar('이미 필요 시간을 충족하였습니다.',{variant:'info'});\n            return\n        }\n        props.runInterval()\n        \n    }\n  \n    function stop(){\n      props.stopInterval()\n    }\n  \n    function checkRoutinizedHabit(){\n        if(isChecked()){\n            enqueueSnackbar('오늘 이미 완료한 습관입니다.',{variant:'warning'});\n            return\n        }\n        checkHabit()\n        \n    }\n  \n    function checkHabit(){\n      dispatch({\n        type:CHECK_ROUTINIZED_HABIT_REQUEST, \n        routineId: routinizedHabit.RoutineId, \n        habitId: routinizedHabit.HabitId, \n        routineIdx: choosedRoutine,\n        routinizedHabitIdx: choosedRoutinizedHabit\n      })\n      enqueueSnackbar('습관이 완료되었습니다.',{variant:'success'});\n      props.stopInterval()\n    }\n  \n    function isAlreadyComplete(){\n        if(time< requiredTime) return false\n        return true\n    }\n    function openNext(){\n        props.stopInterval()\n        props.clearTime()\n        dispatch({type: SET_CHOOSED_ROUTINIZED_HABIT, idx:choosedRoutinizedHabit+1})\n    }\n\n    const handleChange = (event, newValue) => {\n        setTabValue(newValue);\n      };\n    return(\n        <Wrapper>\n            <CardActions className='progress-header'>\n            <Typography variant='h5'>{habit.name}</Typography>\n            {zoomIn?<ZoomOutIcon onClick={changeZoomOut} className='btn'/>:<ZoomInIcon onClick={changeZoomIn} className='btn'/>}\n            </CardActions>\n            <CardContent className='progress-article'>\n                <div className='video-container content-container' hidden={tabValue !== 0}>\n                <Typography className='content-typography'>{habit.content}</Typography>\n                </div>\n                <div className='video-container' hidden={tabValue !== 1}>\n                    {\n                        habit.assist_link?\n                        <iframe src={\"https://www.youtube.com/embed/\"+habit.assist_link} title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"  allowfullscreen=\"allowfullscreen\" mozallowfullscreen=\"mozallowfullscreen\" msallowfullscreen=\"msallowfullscreen\" oallowfullscreen=\"oallowfullscreen\" webkitallowfullscreen=\"webkitallowfullscreen\"></iframe>\n                        :\n                        <Typography className='content-typography'>웹사이트에서 유튜브 링크를 습관에 등록해주세요.</Typography>\n                    }\n                \n                </div>\n            </CardContent>\n            <CardActions className='progress-footer'>\n                <Grid item xs={4}>\n                    <Tabs\n                        value={tabValue}\n                        onChange={handleChange}\n                        variant=\"fullWidth\"\n                    >\n                        <Tab className={tabValue !==0?'no-active-tab':'active-tab'} icon={<NoteIcon />} />\n                        <Tab className={tabValue !==1?'no-active-tab':'active-tab'} icon={<YouTubeIcon />}  />\n                    </Tabs>\n                </Grid>\n                <Grid item xs={3}>\n                    {(min<10?'0'+min:min)+':'+(sec<10?'0'+sec:sec)} / {(requiredMin<10?'0'+requiredMin:requiredMin)+':'+(requiredSec<10?'0'+requiredSec:requiredSec)}\n                </Grid>\n                <Grid item xs={5}>\n                    {\n                        !timeInterval?\n                        <IconButton color=\"primary\" onClick={run}><PlayIcon className=\"btn progress-btn\"></PlayIcon></IconButton>\n                        :\n                        <IconButton color=\"primary\" onClick={stop}><PauseIcon className=\"progress-btn\"></PauseIcon></IconButton>\n                    }\n                    <IconButton color=\"primary\" onClick={checkRoutinizedHabit}>\n                        <CheckIcon className={true?\"btn progress-btn complete-btn\":\"btn progress-btn\"}></CheckIcon>\n                    </IconButton>\n                    <IconButton color=\"primary\" onClick={openNext}>\n                        <NextIcon className=\"btn progress-btn\"></NextIcon>\n                    </IconButton>\n                </Grid>\n            </CardActions>\n        </Wrapper>\n    )\n}\nexport default App","import styled from 'styled-components';\nconst Wrapper = styled.div`\n    .progress > div{\n        width: 450px;\n    }\n    .progress-expanded > div{\n        z-index:50;\n        width:1400px;\n        position: fixed;\n        left: calc((100% - 1400px)/2);\n        top: 56px;\n    }\n    .no-routine{\n        padding:10px;\n    }\n`;\nexport default Wrapper;","import React,{useState, useEffect} from 'react';\nimport {Grid} from '@material-ui/core'\nimport RoutineList from '../RoutineList'\nimport RoutinizedHabitList from '../RoutinizedHabitList'\nimport ProgressItem from '../ProgressItem'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {SET_CHOOSED_ROUTINE} from '../../../reducers/routine'\nimport { Fade } from '@material-ui/core';\nimport Wrapper from './styles';\nfunction App(){\n    let {choosedRoutine, myRoutines, choosedRoutinizedHabit} = useSelector((state)=> {return state.routine})\n    const dispatch = useDispatch()\n    let [zoomIn, setZoomIn] = useState(false)\n    let [time, setTime] = useState(0)\n    let [timeInterval,setTimeInterval] = useState(false)\n\n    function changeZoomIn(){\n        setZoomIn(true)\n    }\n\n    function changeZoomOut(){\n        setZoomIn(false)\n    }\n\n    useEffect(()=>{\n        function start(){\n            return setTimeout(()=>{\n                setTime(time+1)\n            },1000)\n        }\n        if(!timeInterval) return undefined\n        start()\n        return ()=>clearTimeout(start)\n    },[time, timeInterval])\n\n    function runInterval(){\n        setTimeInterval(true)\n    }\n    function stopInterval(){\n        setTimeInterval(false)\n      }\n    function goBack(){\n        stopInterval()\n        clearTime()\n        dispatch({type:SET_CHOOSED_ROUTINE, idx:-1})\n    }\n    function clearTime(){\n        setTime(0)\n    }\n\n    return(\n        <Wrapper>\n        <Grid container spacing={3}>\n            <Grid item xs={6}>\n                {\n                    choosedRoutine==-1 || myRoutines.length<=choosedRoutine?\n                    <RoutineList myRoutines={myRoutines}/>\n                    :\n                    <RoutinizedHabitList routine={myRoutines[choosedRoutine]} goBack={goBack} stopInterval={stopInterval} clearTime={clearTime}/>\n                }\n            </Grid>\n            <Grid item xs={6} className={zoomIn?'progress progress-expanded':'progress'}>\n                {\n                    myRoutines[choosedRoutine] && myRoutines[choosedRoutine].RoutinizedHabits[choosedRoutinizedHabit]?\n                    <ProgressItem \n                    choosedRoutine={choosedRoutine} \n                    choosedRoutinizedHabit={choosedRoutinizedHabit} \n                    time={time} \n                    timeInterval={timeInterval} \n                    runInterval={runInterval} \n                    stopInterval={stopInterval} \n                    clearTime={clearTime}\n                    zoomIn={zoomIn}\n                    changeZoomIn={changeZoomIn}\n                    changeZoomOut={changeZoomOut}/>:\n                    null\n                    \n                }\n            </Grid>\n        </Grid>\n        </Wrapper>\n    )\n}\nexport default App","import styled from 'styled-components';\nconst Wrapper = styled.div`\n    .challenge-card{\n      height:395px;\n    }\n    .slick-dots li button:before {\n      color:white;\n     }\n    .slick-dots li.slick-active button:before {\n      color:lightcoral;\n    }\n    .slick-initialized .slick-slide{\n      text-align-last: center;\n    }\n    .slider-div{\n      border-top: 2px solid #ffffff;\n      border-bottom: 2px solid #ffffff;\n      padding-bottom: 26px;\n    }\n`;\nexport default Wrapper;","import styled from 'styled-components';\nimport Paper from '@material-ui/core/Paper';\nconst Wrapper = styled.div`\n    display: inline-block;\n    padding : 10px;\n    border-radius : 4px;\n    height: max-content;\n    margin:5px;\n    border:2px solid #ffffff;\n    text-align-last: center;\n    text-align: -webkit-center;\n    width: -webkit-fill-available;\n    .title {\n        margin:0px;\n        padding: 5px;\n        text-align: center;\n    }\n    & > div {\n        margin-bottom : 5px;\n    }\n    .float-right {\n        float:right;\n    }\n    .MuiLinearProgress-root{\n      height: 10px;\n      background-color: #626970;\n    }\n    .MuiLinearProgress-barColorPrimary{\n        background-color:red;\n    }\n    .term{\n      background-color: #050505;\n      padding: 5px;\n      text-align: center;\n      color: white;\n      border-radius: 5px;\n      margin: 0 5px;\n    }\n    .confirm-btn{\n      cursor: pointer;\n      padding: 5px;\n      text-align: center;\n      color: black;\n      border-radius: 5px;\n      margin: 0 5px;\n    }\n    .more-btn{\n      color: white;\n    }\n    .period{\n      white-space: nowrap;\n    }\n`;\nexport default Wrapper;","import React from 'react';\nimport Wrapper from './styles'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport { convertCertType } from '../../../config/config'\nimport moment from 'moment'\nimport { Typography } from '@material-ui/core';\n\nconst App = (props) => {\n  const { challenge, idx } = props\n\n  return(\n    <Wrapper>\n      <Grid item xs={12} >\n        <Typography gutterBottom className='title' variant=\"h6\" style={{ maxWidth: 250, textOverflow: 'ellipsis', whiteSpace: 'nowrap', overflow: 'hidden' }}>{challenge.Challenge?.name}</Typography>\n        \n      </Grid>\n      <Grid container spacing={0}>\n        <Grid item xs={9}>\n          <span className='period'>\n            {moment(challenge.start_date).format('YY-MM-DD')}~\n            {moment(challenge.end_date).format('YY-MM-DD')}\n          </span>\n        </Grid>\n        <Grid item xs={3} >\n          <span className='title period' style={{color:'deepskyblue'}}>\n            {(100*challenge.certification_count/challenge.total_number_of_certification).toFixed(1)}%\n          </span>\n        </Grid>\n      </Grid>\n      <Grid container spacing={0}>\n        <Grid item xs={12} style={{ padding: '0 5px' }} >\n          <LinearProgress variant=\"determinate\" value={100*challenge.certification_count/challenge.total_number_of_certification} />\n        </Grid>\n      </Grid>\n      <Grid container spacing={0}>\n        <Grid item xs={6}>\n        <div className='term'>\n            {convertCertType(challenge.Challenge?.certification_cycle)}\n          </div>\n        </Grid>\n        <Grid item xs={6} onClick={()=>{props.changeChoosedChellenge(idx)}} >\n          <div className='confirm-btn btn left-btn'>\n            인증하기  \n          </div>\n        </Grid>\n      </Grid>\n    </Wrapper>\n  );\n}\nexport default App;","import { withStyles, TextField} from '@material-ui/core/';\n\nconst DarkTextField = withStyles({\n    root: {\n      backgroundColor:'#626970',\n      borderRadius:'5px',\n      color:'white',\n      '& label.Mui-focused': {\n        color: 'white',\n      },\n      '& .MuiInput-underline:after': {\n        borderBottomColor: 'white',\n      },\n      '& .MuiOutlinedInput-root': {\n        '&.Mui-focused fieldset': {\n          borderColor: 'white',\n        },\n      },\n    },\n  })(TextField);\n\n  export default DarkTextField;","import styled from 'styled-components';\nconst Wrapper = styled.div`\ninput {\n    width: 100%;\n    height: 100px;\n    padding: 20px;\n    font-size: 20px;\n    border: none;\n    box-sizing: border-box;\n  }\n  \n  .simple-keyboard {\n    width:850px;\n    position: fixed;\n    top: 70%;\n    z-index: 40;\n  }\n  .hg-theme-default{\n    color: black;\n  }\n`;\nexport default Wrapper;","import React, { forwardRef, useCallback, useEffect, useState, useRef } from 'react'\nimport { Grid, IconButton, Button } from '@material-ui/core'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { convertNumDay } from '../../../config/config'\nimport { CERTIFY_CHALLENGE_REQUEST, UPLOAD_CHALLENGE_IMAGE_REQUEST, CLEAR_CERTIFY_CHALLENGE, CLEAR_IMAGE_PATH } from '../../../reducers/challenge'\nimport { useSnackbar } from 'notistack';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DarkTextField from '../../Etc/DarkTextField'\n//keyboard\nimport Keyboard from 'react-hangul-virtual-keyboard';\nimport \"react-simple-keyboard/build/css/index.css\";\nimport Hangul from \"hangul-js\";\nimport \"hangul-virtual-keyboard/build/css/index.css\";\n\nimport Wrapper from './styles'\n// import KeyBoard from '../../Keyboard/index';\n// forwardRef를 써서 warning을 없애긴 했는데 어떤 문제인지 정확히는 모르겠다...\nlet inputText=\"\";\nlet buttonArray=[];\nconst CertModal = forwardRef((props, ref) => {\n  const { enqueueSnackbar } = useSnackbar();\n  const { challenge, closeCertModal } = props\n  const dispatch = useDispatch()\n  const imageInput = useRef()\n  const { challengeImagePath, certifyChallengeError, certifyChallengeDone } = useSelector((state) => state.challenge)\n  const activeDays = challenge.Challenge.ChallengeCertificationDays.filter((day) => day.certification_available === true)\n  const activeTime = {\n    startTime: challenge.Challenge.ChallengeCertificationTimes[0].certification_available_start_time.substring(0, 5),\n    endTime: challenge.Challenge.ChallengeCertificationTimes[0].certification_available_end_time.substring(0, 5)\n  }\n\n  const keyboard = useRef(null);\n  const [layout, setLayout] = useState(\"default\")\n  const [language, setLanguage] = useState(\"default\")\n \n  //키보드 열기\n  const [keyboardopen, setKeyboardOpen] = useState(false)\n  function onChangeKeyBoard(){ setKeyboardOpen(!keyboardopen) }\n   //키보드 값 변경\n   const onChange = e => {setContent(e)};\n    //키보드 누를때\n   const onKeyPress = button => {\n     console.log(\"Button pressed\", button);\n     if(button !== \"{shift}\" && button !== \"{language}\" && button !== \"{enter}\" && button !==\"{bksp}\" && button !== \"{space}\"&& button !==\"{tab}\"){\n       buttonArray.push(button)\n     }\n     if (button === \"{bksp}\") {\n      buttonArray.pop();\n    }\n    if (button === \"{space}\") {\n      buttonArray.push(\" \");\n    }\n    if (button === \"{tab}\") {\n      buttonArray.push(\"  \");\n    }\n    if (button === \"{enter}\"){\n      buttonArray.push(\"\\n\");\n    }\n      inputText = Hangul.assemble(buttonArray);\n    if (button === \"{shift}\" || button === \"{lock}\") {\n      setLayout(layout === \"default\" ? \"shift\" : \"default\")\n    } \n     if( button === \"{language}\"){\n      setLanguage(language === \"default\" ? \"english\" : \"default\")\n     }\n   };\n\n  const [content, setContent] = useState('')\n  const onChangeContent = event => {\n     const content = event.target.value;\n     setContent(content)\n     keyboard.setContent(content);\n   };\n   function reset(){\n    inputText=\"\";\n    buttonArray=[];\n  }\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click()\n  }, [])\n\n  const onUploadImage = useCallback((e) => {\n    // console.log('image', e.target.files[0])\n\n    const imageFormData = new FormData()\n    imageFormData.append('image', e.target.files[0])\n\n    dispatch({\n      type: UPLOAD_CHALLENGE_IMAGE_REQUEST,\n      data: imageFormData\n    })\n\n  }, [dispatch])\n\n  const certifyChallenge = useCallback(() => {\n    if (challengeImagePath === '') {\n      enqueueSnackbar('인증샷을 첨부해주세요!', {variant:'warning'})\n      return\n    }\n\n    const nowDate = new Date()\n    const y = nowDate.getFullYear()\n    const m = nowDate.getMonth()+1\n    const d = nowDate.getDate()\n\n    dispatch({\n      type: CERTIFY_CHALLENGE_REQUEST,\n      data: {\n        img_addr: challengeImagePath,\n        content: content.length === 0 ? '인증합니다!' : content,\n        certification_datetime: y+'-'+m+'-'+d,\n        challengeId: challenge.id // challengeParticipation id...\n      }\n    })\n  }, [challengeImagePath, content, challenge.id, closeCertModal, dispatch, enqueueSnackbar])\n\n  useEffect(() => {\n    if (certifyChallengeDone) {\n      enqueueSnackbar('인증되었습니다!',{variant:'success'})\n      reset()\n      closeCertModal()\n      dispatch({\n        type:CLEAR_CERTIFY_CHALLENGE\n      })\n    }\n    if (certifyChallengeError) {\n      enqueueSnackbar(certifyChallengeError,{variant:'error'})\n      dispatch({\n        type: CLEAR_IMAGE_PATH\n      })\n      dispatch({\n        type:CLEAR_CERTIFY_CHALLENGE\n      })\n    }\n  }, [certifyChallengeDone, certifyChallengeError, enqueueSnackbar])\n\n  const checkCertAvailable = () => {\n    const now = new Date()\n    // 이건 이후에 최적화 시키자... 일요일을 0번으로!\n    const day = ( now.getDay() === 0 ? 6 : now.getDay()-1 )\n    const hour = now.getHours()\n    const minute = now.getMinutes()\n\n    const startHour = parseInt(activeTime.startTime.substring(0, 2))\n    const startMinute = parseInt(activeTime.startTime.substring(3, 5))\n    const endHour = parseInt(activeTime.endTime.substring(0, 2))\n    const endMinute = parseInt(activeTime.endTime.substring(3, 5))\n\n    const checkCertTime = () => {\n      // 24시간 일 경우 무조건 true\n      if (startHour === 0 && startMinute === 0 && endHour === 0 && endMinute === 0) {\n        return true\n      }\n\n      // 시작 시 보다 작고 종료 시 보다 클 경우 false\n      if (startHour > hour || endHour < hour) {\n        return false\n      }\n      // 시작 시와 같고 시작 분 보다 작을 경우 false\n      if (startHour === hour && startMinute > minute) {\n        return false\n      }\n      // 종료 시와 같고 종료 분 보다 클 경우 false\n      if (endHour === hour && endMinute < minute) {\n        return false\n      }\n\n      return true\n    }\n\n    const dayCheck = activeDays.map((day) => day.active_day_of_week).includes(day)\n    const timeCheck = checkCertTime()\n\n    return dayCheck&&timeCheck\n  }\n\n  const canCert = checkCertAvailable()\n  \n  return (\n    <Wrapper>\n    <div \n      style={{\n        backgroundColor: 'black',\n        border: '2px solid #ffffff',\n        padding: \"15px\",\n        borderRadius:'5px',\n      }}\n    >\n      <IconButton style={{ position: 'absoulte', float: 'right', color: '#CCCCCC', padding: 0 }} onClick={closeCertModal}>\n        <CloseIcon onClick={reset}/>\n      </IconButton>\n      <Grid container spacing={3}>\n        <Grid item xs={12} style={{ textAlign: 'center' }} >\n          <img alt={challenge.Challenge.name} src={challengeImagePath ? challengeImagePath : \"/images/camera.png\"} style={{ maxWidth: 100, maxHeight: 50 }} />\n          <input accept=\"image/*\" type=\"file\" name=\"image\" hidden ref={imageInput} onChange={onUploadImage} />\n        </Grid>\n        <Grid item xs={12}>\n          <DarkTextField\n            label=\"인증 메모\"\n            multiline\n            rows={3}\n            value={inputText}\n            placeholder=\"인증 메모를 남겨보세요!\"\n            variant=\"outlined\"\n            onClick={onChangeKeyBoard}\n            onChange={onChangeContent}\n            fullWidth\n          />\n        </Grid>\n        {\n          keyboardopen ? <Keyboard\n          keyboardRef={r=>keyboard.r}\n          layoutName={layout}\n          language={language}\n          onChange={onChange}\n          onKeyPress={onKeyPress}\n          className='keyboard'\n        /> : null\n        }\n        \n        <>\n        <Grid item xs={12} >\n        {\n          canCert\n            ? <span>지금 인증 할 수 있습니다!</span>\n            : <span>지금은 인증 할 수 없습니다. 가능한 요일과 시간을 확인해주세요!</span>\n        }\n        </Grid>\n        <Grid item xs={12} style={{padding: '0 12px'}} >\n          인증가능 요일 : {activeDays.map((day, i) => <span key={i}>{convertNumDay(day.active_day_of_week)} </span>)}\n        </Grid>\n        <Grid item xs={12} style={{padding: '0 12px'}} >\n          인증가능 시간 : {activeTime.startTime} ~ {activeTime.endTime}\n        </Grid>\n        <Grid item xs={6} >\n          <Button fullWidth onClick={onClickImageUpload} className='left-btn' >사진 업로드</Button>\n        </Grid>\n        <Grid item xs={6} >\n          <Button disabled={!canCert} fullWidth onClick={certifyChallenge}  className='right-btn'>인증하기!</Button>\n        </Grid>\n        </>\n      </Grid>\n    </div>\n    </Wrapper>\n  )\n})\n\nexport default CertModal","import React, { useState } from 'react';\nimport Slider from 'react-slick'\nimport Wrapper from './styles'\nimport ChallengtItem from '../ChallengeItem'\nimport { Typography, Grid, CardContent,CardActions } from '@material-ui/core';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport {useSelector} from 'react-redux'\nimport Cert from '../CertModal';\nimport CustomCard from '../../Routine/CustomCard'\nimport EmojiEventsIcon from '@material-ui/icons/EmojiEvents';\nconst App = (props) => {\n  let {msg} = props\n  let {myChallenges} = useSelector((state)=>{return state.challenge})\n  let [choosedChellenge, setChoosedChellenge] = useState(-1)\n\n  function changeChoosedChellenge(num){\n    setChoosedChellenge(num)\n  }\n  function closeCert(){\n    setChoosedChellenge(-1)\n  }\n\n \n  let settings = {\n    arrows:false,\n    dots: true,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 3,\n    slidesToScroll: 3\n  };\n  \n  return(\n    <Wrapper>\n      <Grid container spacing={2}>\n        <Grid item md={6} className='challenge-div'>\n          <CustomCard className='challenge-card'>\n          <CardActions className='progress-header'>\n          <EmojiEventsIcon/>\n            <Typography variant='h5'>나의 챌린지</Typography>\n            </CardActions>\n            <CardContent className='slider-div'>\n            <Slider {...settings}>\n              {\n                myChallenges.map((item, idx)=>(<ChallengtItem key={idx} challenge={item} idx={idx} changeChoosedChellenge={changeChoosedChellenge}/>))\n              }\n            </Slider>\n            </CardContent>\n            <CardActions>\n              <Typography variant='p'>{msg}</Typography>\n            </CardActions>\n          </CustomCard>\n        </Grid>\n        <Grid item md={3}>\n            {\n              myChallenges[choosedChellenge]?\n              <Cert challenge={myChallenges[choosedChellenge]} closeCertModal={closeCert}/>\n              :\n              null\n            }\n        </Grid>\n        <Grid item md={3}>\n          \n        </Grid>\n      </Grid>\n      \n    </Wrapper>\n  );\n}\nexport default App;","import styled from 'styled-components';\nconst Wrapper = styled.div`\n    text-align:right;\n\n    .btn{\n        color:white;\n        width: 40px;\n        height: auto;\n    }\n`;\nexport default Wrapper;","import { withStyles, Menu} from '@material-ui/core/';\n\nconst DarkMenu = withStyles({\n    paper: {\n      backgroundColor:'black',\n      borderRadius:'5px',\n      color:'white',\n      border:'2px solid white'\n      \n    },\n  })(Menu);\n\n  export default DarkMenu;","import React, { useCallback, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { IconButton } from '@material-ui/core';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { logoutRequestAction } from '../../../reducers/user';\nimport Wrapper from './styles';\nimport { MenuItem, Switch, Grid } from '@material-ui/core';\nimport DarkMenu from '../DarkMenu';\nconst App=(props)=>{\n    let {routineVisible, routineHandleChange, challengeVisible, challengeHandleChange} = props\n    const { me, logOutError } = useSelector((state) => state.user)\n    let history = useHistory();\n    const dispatch = useDispatch()\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n\n    const handleClick = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n    useEffect(() => {\n        if (!me) {\n          history.push('/')\n        }\n        if (logOutError) {\n          console.log(logOutError)\n        }\n      }, [me, logOutError, history])\n\n    const onSignOut = useCallback(() => {\n        dispatch(logoutRequestAction())\n      }, [me, dispatch])\n\n    function reload(){\n      window.location.replace(\"/Home\")\n    }\n\n  \n  return(\n      <Wrapper>\n          <IconButton onClick={handleClick}>\n            <VisibilityIcon className='btn'/>\n          </IconButton>\n          <DarkMenu\n          id=\"long-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={open}\n          onClose={handleClose}\n          PaperProps={{\n            style: {\n              width: '20ch',\n            },\n          }}\n        >\n          <MenuItem>\n            <Grid container>\n              <Grid item xs={6}>\n                챌린지\n              </Grid>\n            </Grid>\n              <Grid item xs={6}>\n                <Switch checked={challengeVisible} onChange={challengeHandleChange}/>\n              </Grid>\n            </MenuItem>\n          <MenuItem>\n          <Grid container>\n              <Grid item xs={6}>\n                루틴\n              </Grid>\n            </Grid>\n              <Grid item xs={6}>\n                <Switch checked={routineVisible} onChange={routineHandleChange}/>\n              </Grid>\n          </MenuItem>\n        </DarkMenu>\n          <IconButton onClick={onSignOut}>\n            <ExitToAppIcon className='btn'/>\n          </IconButton>\n          <IconButton onClick={reload}>\n             <ReplayIcon className='btn'/>\n          </IconButton>\n      </Wrapper>\n  )\n\n}\nexport default App;","import styled from 'styled-components';\nconst Wrapper = styled.div`\n    .fc-theme-standard .fc-scrollgrid{\n        border: 1px solid #ffffff;\n        border-radius:5px;\n    }\n    \n    .fc-theme-standard td, .fc-theme-standard th{\n        border: 1px solid #ffffff;\n    }\n    .fc .fc-button-primary {\n        color: #fff;\n        color: var(--fc-button-text-color, #fff);\n        background-color: rgba(0,0,0,0);\n        background-color: var(--fc-button-bg-color, #ffffff00);\n        border-color: #fff;\n        border-color: var(--fc-button-border-color, #ffffff00);\n    }\n    .fc .fc-popover-header {\n        color: black;\n    }\n    .fc .fc-more-popover .fc-popover-body {\n        color: black;\n    }\n    .fc .fc-more-popover .fc-popover-body .fc-more-popover-misc{\n        height: 0;\n    }\n    .fc-event-title .fc-sticky{\n        color: black;\n    }\n`;\nexport default Wrapper;","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction'\nimport Wrapper from './styles'\n\nconst Calendar = (props) => {\n  const {events} = useSelector((state) => state.calendar)\n \n    return(\n        <Wrapper className='demo-app'>\n            <div>\n           \n            </div>\n            <div className='demo-app-main'>\n          \n            <FullCalendar\n                // height='auto'\n                plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n                headerToolbar={{\n                    left: 'prev',\n                    center: 'title',\n                    right: 'today next'\n                }}\n               \n                initialView='dayGridMonth'\n                locale='ko'\n                dayCellContent={(info)=>{return info.date.getDate()}}\n                buttonText={{today:'오늘'}}\n                // editable={true}\n                selectMirror={true}\n                // selectable={true}\n                height='500px'\n                dayMaxEvents={true}\n                events={events}\n                // eventClick={openModifyEventModal}\n                />\n               \n            </div>\n        </Wrapper>\n    )\n  }\n\nexport default Calendar","import React from 'react'\nimport moment from 'moment';\nimport {ListItem, Checkbox }from '@material-ui/core/';\n\nconst TodayEvent = (props) => {\n\n    const eventStartDay = props.event.start \n    const eventStartTime = moment(eventStartDay).format('HH:mm')\n    const bool = props.event.allDay\n    const [checked, setChecked] = React.useState(false);\n\n    const handleChange = (event) => {\n      setChecked(event.target.checked);\n    };\n    \n    return(\n        <>\n            <ListItem style={{whiteSpace: 'nowrap', marginLeft:'-25px'}}>\n               <Checkbox\n                   checked={checked}\n                   onChange={handleChange}\n                   inputProps={{ 'aria-label': 'primary checkbox' }}\n                   style={{marginRight: '10px', color:'white'}}\n                   color=\"white\"\n                   />\n               {\n                   bool ? null : <h5 style={{color:'white'}}>({eventStartTime}) &nbsp;</h5> \n               }\n               \n                <h4 style={{color:'white'}}>{props.event.title}</h4>\n              \n           </ListItem>\n            <hr color='white' style={{width:'92%', float:'right', marginTop:'-10px'}}/>\n \n        </>\n    )\n}\n\n\nexport default TodayEvent","import React, { useState, useEffect } from 'react';\nimport Wrapper from './styles';\nimport moment from 'moment';\nimport {useDispatch, useSelector} from 'react-redux';\nimport Clock from '../../components/Clock';\nimport Weather from '../../components/Weather/WeatherWidget'\nimport RoutineRootComponent from '../../components/Routine/RoutineRootComponent'\nimport ChallengeList from '../../components/Challenge/ChallengeList/'\nimport SettingButtons from '../../components/Etc/SettingButtons'\nimport {\n   Grid,\n   List,\n   ListItem,\n   Typography,\n   Fade\n  } from '@material-ui/core';\nimport \"@fullcalendar/common/main.css\";\nimport \"@fullcalendar/daygrid/main.css\";\nimport { advice } from '../../config/config';\nimport 'react-calendar/dist/Calendar.css';\nimport {LOAD_TODAY_ROUTINES_REQUEST} from '../../reducers/routine'\nimport {LOAD_MY_CHALLENGES_REQUEST} from '../../reducers/challenge'\n//달력&일정\nimport CustomCalendar from '../../components/Calendar/index';\nimport TodayEvent from '../../components/TodayEvent/index';\nimport { LOAD_EVENT_REQUEST } from '../../reducers/calendar';\nimport {SnackbarProvider} from 'notistack'\n\nconst Main = props => {\n  let today = new Date()\n  let msg = advice(today.getDate()%10)\n  const dispatch = useDispatch()\n  useEffect(()=>{\n    dispatch({type:LOAD_TODAY_ROUTINES_REQUEST})\n    dispatch({type: LOAD_EVENT_REQUEST})\n    dispatch({\n      type: LOAD_MY_CHALLENGES_REQUEST\n    })\n  },[dispatch])\n  const { events } = useSelector((state) => state.calendar)\n\n  const [routineVisible, setRoutineVisible] = useState(true);\n  const [challengeVisible, setChallengeVisible] = useState(true);\n\n  const routineHandleChange = () => {\n    setRoutineVisible((prev) => !prev);\n  };\n\n  const challengeHandleChange = () =>{\n    setChallengeVisible((prev) => !prev);\n  }\n\n  const todayEvent = events.filter((event)=>\n    moment(moment(event.start).format('YYYY-MM-DD')).isSame(moment(moment().format('YYYY-MM-DD'))) || \n    moment(moment(event.end).format('YYYY-MM-DD')).isSame(moment(moment().format('YYYY-MM-DD'))) ||\n    moment(moment().format('YYYY-MM-DD')).isBetween(moment(event.start).format('YYYY-MM-DD'), moment(event.end).format('YYYY-MM-DD'))\n    ) \n\n  \n  return (\n    <SnackbarProvider maxSnack={2}\n    TransitionComponent={Fade}\n    >\n        <Wrapper>\n          \n          \n\n          <Grid container spacing={2}>\n            {/* 왼쪽 9 */}\n            <Grid container item xs={9} spacing={0}>\n              {/* 날씨*/}\n              <Grid item xs={12}>\n                <Weather/>\n              </Grid>\n              {/* 빈공간 */}\n              <Grid container item xs={12} spacing={0} style={{height:'22px'}}></Grid>\n              {/* 챌린지 */}\n              <Grid item xs={12}>\n                <Fade in={challengeVisible} >\n                  <div>\n                  <ChallengeList msg={msg}/>\n                  </div>\n                </Fade>\n              </Grid>\n               {/* 아래쪽으로 맞출 공간 */}\n              <Grid container item xs={12} spacing={0} style={{height:'22px'}}></Grid>\n              {/* 루틴 */}\n              <Grid item xs={8} className=\"routine\">\n                <Fade in={routineVisible}>\n                  <div>\n                    <RoutineRootComponent/>\n                  </div>\n                </Fade>\n              </Grid>\n              <Grid item xs={4} className=\"routine\"></Grid>\n            </Grid>\n\n            {/* 오른쪽 3 */}\n            <Grid container item xs={3} spacing={0}>\n              {/* 시계 */}\n              <Grid item xs={12}  >\n                <Clock/>\n                <br></br>\n              </Grid>\n              <Grid item xs={12}  >\n                <SettingButtons routineHandleChange={routineHandleChange} routineVisible={routineVisible} challengeHandleChange={challengeHandleChange} challengeVisible={challengeVisible}/>\n              </Grid>\n              {/* 아래쪽으로 맞출 공간 */}\n              <Grid container item xs={12} spacing={0} style={{height:'104px'}}></Grid>\n              <Grid item xs={12}>\n                <Typography variant='h5'>오늘의 일정</Typography>\n                <List className=\"listScroll\" component=\"nav\" aria-label=\"mailbox folders\"\n                style={{ maxHeight: '100px'}}>           \n                {  \n                    todayEvent.length === 0 ?\n                    <ListItem>오늘의 일정이 없습니다</ListItem> :\n                    <>\n                    {\n                    todayEvent.map((event, idx) => {\n                      return <TodayEvent key={idx} event={event}/>  \n                    })\n                    }\n                    </>\n                }\n                </List>\n              </Grid>\n              {/* 아래쪽으로 맞출 공간 */}\n              <Grid container item xs={12} spacing={0} style={{height:'50px'}}></Grid>\n              {/* 달력 */}\n              <Grid item xs={12}>\n               <CustomCalendar myEvent={events}/>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Wrapper>\n      </SnackbarProvider>\n    \n  );\n};\n\nexport default Main;\n\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\ndisplay: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 90vh;\n.box{\n    background: #000;\n}\n.box2{\n    text-align: center;\n\n   \n}\n.logo{\n    background: linear-gradient(to right, #FFEAEA, #3B896D);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n}\n.LoginCard{ \n    display: flex;\n    justify-content: center;\n    width: 500px;\n   // margin-top: 100px;\n    //flex: 1;\n}\n\n`;\n\nexport default Wrapper;","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\nbackgroundColor:black;\n        color:white;\n\n`;\n\nexport default Wrapper;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  Button,\n  Grid,\n  Typography,\n  Divider,\n  TextField,\n  Container,\n} from '@material-ui/core';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\n\nimport { useDispatch } from 'react-redux';\nimport { loginRequestAction } from '../../../reducers/user';\nimport Wrapper from './styles';\n\nconst regExpEm = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\nconst regExpPw = /(?=.*\\d{1,50})(?=.*[~`!@#$%\\^&*()-+=]{1,50})(?=.*[a-zA-Z]{2,50}).{8,50}$/;\n\nconst LoginForm = () => {\n  const dispatch = useDispatch()\n\n  const [email, setEmail] = useState('')\n  const onChangeEmail = useCallback((e) => {\n    setEmail(e.target.value)\n  }, [email])\n\n  const [password, setPassword] = useState('')\n  const onChangePassword = useCallback((e) => {\n    setPassword(e.target.value)\n  }, [password])\n\n  const [disabled, setDisabled] = useState(true)\n\n  const onLogin = useCallback(() => {\n    if (!password || !email) {\n      alert('You need both email and password.');\n      return;\n    }\n\n    if (!regExpEm.test(email)) {\n      alert('이메일 형식이 맞지 않습니다.');\n      return;\n    }\n\n    if (!regExpPw.test(password)) {\n      alert('비밀번호는 숫자, 특문 각 1회 이상, 영문은 2개 이상 사용하여 8자리 이상 입력하세요.')\n      return\n    }\n\n    dispatch(loginRequestAction({email, password}))\n  }, [email, password, dispatch])\n\n\n\n\n  useEffect(() => {\n    if (email !== '' && password !== '') {\n      setDisabled(false);\n    }\n\n    if (email === '' || password === '') {\n      setDisabled(true);\n    }\n  }, [email, password]);\n\n  return (\n    <Wrapper>\n    <Container maxWidth=\"sm\" style={{margin: '0 20px', padding: '20px', border: 'solid 1px #eeeeee', borderRadius: '10px'}}>\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        spacing={2}\n        className=\"grid\"\n      >\n        <Grid>\n          <AccountBoxIcon fontSize=\"large\" style={{ color: '#89DDBF', marginTop:\"5px \" }} />\n        </Grid>\n        <Grid item xs={11}>\n          <Typography variant=\"h5\">\n            로그인\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            required\n            id=\"outlined-required\"\n            placeholder=\"이메일\"\n            className=\"text-field\"\n            defaultValue={email}\n            variant=\"outlined\"\n            style={{background: 'white'}}\n            fullWidth={true}\n            onChange={onChangeEmail}\n            // onFocus={event => {\n            //   setIsShowKeyborad(true);\n            // }}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            required\n            id=\"outlined-password-input\"\n            placeholder=\"비밀번호\"\n            className=\"text-field\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            defaultValue={password}\n            variant=\"outlined\"\n            style={{background: 'white'}}\n            // style={{border: '#fff 1px solid', color:'#fff'}}\n            // InputLabelProps={{ style:{color: '#fff'}}}\n            // inputProps={{style:{color:'#fff'}}}\n            fullWidth={true}\n            onChange={onChangePassword}\n            // onFocus={event => {\n            //   setIsShowKeyborad(true);\n            // }}\n          />\n        </Grid>\n        <Grid item xs={12} className=\"grid-item\">\n          <Button\n            variant=\"contained\"\n            disabled={disabled}\n            fullWidth={true}\n            \n            color=\"secondary\"\n            style={{color:'white', border:'#eee 1px solid'}}\n            onClick={onLogin}\n            className=\"grid-item-button\"\n          >\n            login\n          </Button>\n        </Grid>\n        <Grid item xs={12} className=\"grid-item\" style={{margin:'10px 0'}}>\n          <Grid\n            container\n            direction=\"row\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            spacing={0}\n          >\n            <Grid item xs={5}>\n            <Divider style={{backgroundColor:'#fff'}}/>\n            </Grid>\n\n            <Grid item xs={2}>\n              <Typography variant=\"h6\" align=\"center\" className=\"grid-item-typography1\">\n                or\n              </Typography>\n            </Grid>\n\n            <Grid item xs={5}>\n              <Divider style={{backgroundColor:'#fff'}}/>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={6}>\n          <div style={{textAlign: 'center', letterSpacing: '2px', color:'#eee', float:'right'}}>\n           회원가입 하러가기\n          </div>\n        </Grid>\n        <Grid item xs={6} style={{textAlign: 'center', float:'left'}}>\n          <img src=\"./images/mymeQR.png\" width=\"100px\" alt=''></img>\n        </Grid>\n        \n      \n       \n      </Grid>\n    </Container>\n    {/* <div style={{textAlign:'center', marginTop:'10px'}}>회원가입은 https://myme.today 에서 가능합니다</div> */}\n    </Wrapper>\n  );\n}\n\nexport default LoginForm","import React, {  useEffect } from 'react';\nimport Wrapper from './styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport LoginForm from '../../components/Auth/LoginForm';\nimport {Typography} from '@material-ui/core'\nimport './index.css';\nconst Auth = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  const { me } = useSelector((state) => state.user)\n\n  useEffect(() => {\n    dispatch({\n      type: LOAD_MY_INFO_REQUEST\n    })\n    console.log('hi')\n  }, [dispatch])\n\n  // 로그인 상태이면 홈 화면으로 이동!\n  useEffect(() => {\n    if (me) {\n      history.push('/Home')\n    }\n  }, [me, history])\n\n  return(\n    <Wrapper>\n      <div className=\"box\">\n        <div className=\"box2\">\n          <Typography\n                variant=\"h1\"\n                className=\"logo\"\n                style={{ fontFamily: 'BAUHS93', color:'white' }}\n              >\n                MYME\n          </Typography>\n        </div>\n        <div className=\"LoginCard\">\n          <LoginForm />\n        </div>\n      </div>\n    </Wrapper>\n  ) ;\n};\n\nexport default Auth;\n","// react\nimport React from 'react';\nimport { BrowserRouter, Switch, Route} from 'react-router-dom';\n\n// ui\nimport { createTheme, MuiThemeProvider } from '@material-ui/core/styles';\n//redux\nimport { Provider } from 'react-redux';\n\n// import store from './redux';\nimport store from './store/configureStore'\n\n// page\nimport Main from './pages/Main';\nimport Auth from './pages/Auth'\n\n// css\nimport './index.css';\n\n/// theme\nconst theme = createTheme({\n  typography: {\n    fontFamily: ['Noto Sans KR'].join(','),\n    button: {\n      fontFamily: 'Noto Sans KR',\n    },\n    body1: {\n      fontWeight: 500,\n    },\n  },\n  overrides: {\n    MuiCssBaseline: {\n      '@global': {\n        body: {\n          backgroundColor: 'black',\n          color:'white'\n        },\n      },\n    },\n  },\n});\n\n// app\nconst App = () => {\n \n  return (\n    <Provider store = {store}>\n      <MuiThemeProvider theme={theme}>\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Auth} />\n            <Route exact path=\"/Home\" component={Main} />\n          </Switch>\n        </BrowserRouter>\n      </MuiThemeProvider>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType !== null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}